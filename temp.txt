Certainly! Your interactive prototype for the point-of-sales mobile app is already well-structured and includes many essential features. To complete all screen features, we can add the following functionality:

1. Add/Edit/Delete Products in Product Management
Currently, the product management page only displays products. Let's add functionality to allow users to add, edit, and delete products.

Updates:
Add "Add Product" Button
Implement Edit/Delete buttons for each product
Create a modal or form for adding/editing products
Code Example:
function addProduct(event) {
    event.preventDefault();
    const name = document.getElementById('new-product-name').value;
    const price = parseInt(document.getElementById('new-product-price').value, 10);
    const img = document.getElementById('new-product-img').value;

    const newProduct = { id: Date.now(), name, price, img };
    products['Makanan'].push(newProduct); // Example: Add to 'Makanan' category
    renderProductManagement();
    alert('Produk berhasil ditambahkan!');
}

function deleteProduct(category, productId) {
    products[category] = products[category].filter(product => product.id !== productId);
    renderProductManagement();
    alert('Produk berhasil dihapus!');
}

function renderProductManagement() {
    const productList = document.getElementById('manage-product-list');
    productList.innerHTML = '';

    Object.keys(products).forEach(category => {
        products[category].forEach(product => {
            const item = document.createElement('div');
            item.className = 'product-item';
            item.innerHTML = `
                <img src="${product.img}" alt="${product.name}">
                <div class="details">
                    <div class="name">${product.name}</div>
                    <div class="price">Rp ${product.price.toLocaleString('id-ID')}</div>
                </div>
                <button onclick="deleteProduct('${category}', ${product.id})">Hapus</button>
            `;
            productList.appendChild(item);
        });
    });
}

2. Filter Products by Category
On the product list page, allow users to filter products by category.

Updates:
Add a dropdown or tabs for categories
Update the product list based on the selected filter
Code Example:
function filterProducts(category) {
    const productListContainer = document.getElementById('product-items-container');
    productListContainer.innerHTML = '';

    const selectedProducts = products[category];
    selectedProducts.forEach(product => {
        const productCard = document.createElement('div');
        productCard.className = 'product-card';
        productCard.innerHTML = `
            <img src="${product.img}" alt="${product.name}">
            <div class="info">
                <h3>${product.name}</h3>
                <p class="price">Rp ${product.price.toLocaleString('id-ID')}</p>
                <button class="add-btn" onclick="addToCart(${product.id}, '${product.name}', ${product.price}, '${product.img}')">
                    <i class="material-icons-outlined" style="font-size: 1.2em; margin-right: 5px;">add_circle_outline</i>
                    Tambah
                </button>
            </div>
        `;
        productListContainer.appendChild(productCard);
    });
}

3. Implement Discounts
Add functionality to apply discounts on the payment page.

Updates:
Add a field to input discount percentage
Update the total payment amount based on the discount
Code Example:
function applyDiscount() {
    const discountInput = document.getElementById('discount-input').value;
    const discountPercentage = parseFloat(discountInput) || 0;
    const subtotal = Object.values(cart).reduce((sum, item) => sum + item.price * item.quantity, 0);
    const discountAmount = (subtotal * discountPercentage) / 100;
    const totalAmount = subtotal - discountAmount;

    document.getElementById('payment-discount').textContent = `Rp ${discountAmount.toLocaleString('id-ID')}`;
    document.getElementById('payment-total-amount').textContent = `Rp ${totalAmount.toLocaleString('id-ID')}`;
}

4. Add Sales Analytics
Provide detailed analytics, such as sales trends, top-selling products, and revenue growth.

Updates:
Add a "Top Products" section on the dashboard
Include a line chart for sales trends
Code Example:
function renderTopProducts() {
    const topProducts = saleHistory.flatMap(sale => sale.items)
        .reduce((acc, item) => {
            acc[item.name] = (acc[item.name] || 0) + item.quantity;
            return acc;
        }, {});

    const sortedProducts = Object.entries(topProducts)
        .sort((a, b) => b[1] - a[1])
        .slice(0, 3);

    const topProductsContainer = document.getElementById('top-products');
    topProductsContainer.innerHTML = '';
    sortedProducts.forEach(([name, quantity]) => {
        const productElement = document.createElement('div');
        productElement.textContent = `${name}: ${quantity} terjual`;
        topProductsContainer.appendChild(productElement);
    });
}

5. Add User Profile & Settings
Allow users to update their profile information and app settings.

Updates:
Create a "Profile" page
Include fields for updating user information
Code Example:
function updateProfile(event) {
    event.preventDefault();
    const name = document.getElementById('profile-name').value;
    const email = document.getElementById('profile-email').value;

    localStorage.setItem('user_name', name);
    localStorage.setItem('user_email', email);
    alert('Profil berhasil diperbarui!');
}

6. Add Multi-Language Support
Provide support for multiple languages, such as English and Indonesian.

Updates:
Create a language toggle
Update text dynamically based on the selected language
Code Example:
const translations = {
    en: {
        welcome: 'Welcome to kiPOS',
        login: 'Login',
        register: 'Register',
        dashboard: 'Dashboard',
    },
    id: {
        welcome: 'Selamat Datang di kiPOS',
        login: 'Masuk',
        register: 'Daftar',
        dashboard: 'Dashboard',
    },
};

function setLanguage(lang) {
    document.querySelectorAll('[data-translate]').forEach(element => {
        const key = element.getAttribute('data-translate');
        element.textContent = translations[lang][key];
    });
}

7. Add Notifications
Display notifications for actions like adding products, completing payments, etc.

Updates:
Create a notification system
Show notifications dynamically
Code Example:
function showNotification(message, type = 'success') {
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    notification.textContent = message;

    document.body.appendChild(notification);
    setTimeout(() => notification.remove(), 3000);
}

8. Add Offline Mode
Allow users to use the app offline and sync data when reconnected.

Updates:
Cache data locally using IndexedDB or LocalStorage
Sync data with the server when online
Code Example:
function syncData() {
    if (navigator.onLine) {
        // Sync data with the server
    } else {
        alert('Anda sedang offline. Data akan disinkronkan saat online.');
    }
}

9. Add QR Code for Payment
Generate QR codes for payment methods like QRIS.

Updates:
Use a library like qrcode.js to generate QR codes
Display QR codes on the payment page
Code Example:
function generateQrCode() {
    const qrContainer = document.getElementById('qr-code-container');
    qrContainer.innerHTML = '';
    const qrCode = new QRCode(qrContainer, {
        text: 'https://payment-link.com',
        width: 128,
        height: 128,
    });
}

10. Add Dark Mode
Provide a toggle for dark mode.

Updates:
Add a dark mode toggle button
Update CSS variables dynamically
Code Example:
function toggleDarkMode() {
    const root = document.documentElement;
    const isDarkMode = root.style.getPropertyValue('--bg-color') === '#1A202C';

    if (isDarkMode) {
        root.style.setProperty('--bg-color', '#EDF2F7');
        root.style.setProperty('--text-color', '#2D3748');
    } else {
        root.style.setProperty('--bg-color', '#1A202C');
        root.style.setProperty('--text-color', '#CBD5E0');
    }
}

----------
Can you add above enhancement into my code ? generate the full html code of my interactive prototype

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>kiPOS - Mobile Point of Sales</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Outlined" rel="stylesheet">
    <style>
        :root {
            --primary-color: #38A169;
            --secondary-color: #F6AD55;
            --text-color: #2D3748;
            --text-light: #718096;
            --bg-color: #EDF2F7;
            --card-bg: #FFFFFF;
            --border-color: #E2E8F0;
            --accent-color: #4C51BF;
            --green-light: #F0FFF4;
            --blue-light: #EBF4FF;
            --red-light: #FFF5F5;
        }

        * {
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            margin: 0;
            padding: 0;
            background-color: var(--bg-color);
            color: var(--text-color);
        }

        .container {
            max-width: 480px;
            margin: auto;
            background-color: var(--card-bg);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            box-shadow: 0 0 20px rgba(0,0,0,0.05);
            position: relative;
            overflow: hidden;
        }

        /* --- Global Components --- */
        .header {
            background-color: var(--primary-color);
            color: #fff;
            padding: 15px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: sticky;
            top: 0;
            z-index: 1000;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .header .logo {
            font-size: 1.5em;
            font-weight: 700;
        }

        .header .cart-icon {
            font-size: 1.8em;
            cursor: pointer;
            position: relative;
        }

        .cart-count {
            position: absolute;
            top: -5px;
            right: -5px;
            background-color: var(--secondary-color);
            color: #fff;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            font-size: 0.8em;
            font-weight: 600;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .header .back-btn {
            font-size: 1.5em;
            cursor: pointer;
            display: none;
        }
        .header.app-mode .back-btn {
            display: block;
        }
        .header.app-mode .logo {
            display: none;
        }

        .content {
            flex-grow: 1;
            overflow-y: auto;
            padding: 15px;
        }
        
        h2 {
            font-weight: 600;
            font-size: 1.5em;
            margin-top: 0;
            margin-bottom: 20px;
            color: var(--text-color);
        }

        .footer-nav {
            display: flex;
            justify-content: space-around;
            padding: 10px;
            border-top: 1px solid var(--border-color);
            position: sticky;
            bottom: 0;
            background-color: var(--card-bg);
            z-index: 1000;
            box-shadow: 0 -2px 10px rgba(0,0,0,0.05);
        }

        .footer-nav button {
            background: none;
            border: none;
            color: var(--text-light);
            cursor: pointer;
            font-size: 0.8em;
            font-weight: 600;
            padding: 5px;
            display: flex;
            flex-direction: column;
            align-items: center;
            transition: color 0.3s;
        }

        .footer-nav button .material-icons {
            font-size: 1.5em;
            margin-bottom: 2px;
        }

        .footer-nav button.active {
            color: var(--primary-color);
        }

        .page {
            display: none;
        }

        .page.active {
            display: block;
        }
        
        .card {
            background-color: var(--card-bg);
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 15px;
            box-shadow: 0 4px 10px rgba(0,0,0,0.05);
        }
        
        .btn {
            background-color: var(--primary-color);
            color: #fff;
            padding: 15px;
            text-align: center;
            font-size: 1.2em;
            font-weight: 600;
            border: none;
            width: 100%;
            border-radius: 8px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        .btn:hover {
            background-color: #2F855A;
        }
        .btn.secondary {
            background-color: transparent;
            color: var(--primary-color);
            border: 2px solid var(--primary-color);
        }
        .btn.secondary:hover {
            background-color: var(--green-light);
        }

        /* --- Custom Loaders --- */
        .loader-page {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            text-align: center;
            background-color: var(--bg-color);
        }
        
        .loader-gear-wrapper {
            position: relative;
            width: 80px;
            height: 80px;
        }
        .loader-gear {
            animation: spin 3s linear infinite;
        }
        .loader-gear-inside {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: var(--bg-color);
            font-size: 1.2em;
        }
        
        .loader-kipos .logo-icon {
            font-size: 5em;
            color: var(--primary-color);
            animation: pulse-loader 1.5s infinite;
        }
        .loader-kipos h1 {
            font-size: 2em;
            font-weight: 700;
            color: var(--primary-color);
            margin: 10px 0;
            animation: pulse-loader 1.5s infinite;
            animation-delay: 0.2s;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        @keyframes pulse-loader {
            0% { opacity: 0.5; }
            50% { opacity: 1; }
            100% { opacity: 0.5; }
        }

        /* --- Skeleton Loader --- */
        .skeleton {
            animation: pulse 1.5s infinite;
        }
        .skeleton-block {
            background-color: #E2E8F0;
            border-radius: 4px;
        }
        .skeleton-card {
            display: flex;
            flex-direction: column;
            gap: 10px;
            padding: 15px;
            border-radius: 12px;
            background-color: var(--card-bg);
            margin-bottom: 15px;
        }
        .skeleton-card .title {
            width: 70%;
            height: 20px;
        }
        .skeleton-card .text {
            width: 100%;
            height: 15px;
        }
        @keyframes pulse {
            0% { opacity: 0.5; }
            50% { opacity: 1; }
            100% { opacity: 0.5; }
        }

        /* --- Landing Page --- */
        #landing-page {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            padding: 20px;
        }
        #landing-page .logo-icon {
            font-size: 5em;
            color: var(--primary-color);
            margin-bottom: 20px;
        }
        #landing-page h1 {
            font-size: 2.5em;
            font-weight: 700;
            margin-bottom: 5px;
        }
        #landing-page p {
            font-size: 1.1em;
            color: var(--text-light);
            margin-bottom: 40px;
        }
        .landing-btn-group {
            width: 100%;
        }
        .landing-btn-group .btn {
            margin-bottom: 10px;
        }

        /* --- Auth Pages --- */
        .auth-container {
            display: flex;
            flex-direction: column;
            justify-content: center;
            padding: 20px;
            text-align: center;
        }
        .auth-container .auth-header {
            margin-bottom: 40px;
        }
        .auth-container .auth-header h2 {
            margin-bottom: 5px;
        }
        .auth-container .auth-header p {
            color: var(--text-light);
        }
        .auth-form {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }
        .auth-form .input-group {
            position: relative;
        }
        .auth-form .input-group .material-icons-outlined {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-light);
            font-size: 1.2em;
        }
        .auth-form input, .auth-form select {
            width: 100%;
            padding: 15px 15px 15px 50px;
            border-radius: 8px;
            border: 1px solid var(--border-color);
            font-family: 'Poppins', sans-serif;
            font-size: 1em;
            background-color: var(--bg-color);
        }
        .auth-form select {
            padding-left: 50px;
            appearance: none;
            background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%23718096'%3e%3cpath d='M7 10l5 5 5-5z'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 15px center;
            background-size: 1em;
        }
        .auth-form a {
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 500;
            font-size: 0.9em;
        }
        .auth-form .otp-inputs {
            display: flex;
            justify-content: space-between;
            gap: 10px;
        }
        .auth-form .otp-inputs input {
            width: 50px;
            padding: 15px 0;
            text-align: center;
            background-color: var(--card-bg);
            border: 1px solid var(--border-color);
            font-weight: 600;
        }
        .auth-footer {
            margin-top: 20px;
            color: var(--text-light);
        }
        .auth-footer a {
            font-weight: 600;
        }

        /* --- Other Pages (Same as v4) --- */
        #onboarding-page {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            padding: 20px;
        }
        #onboarding-page .onboarding-icon {
            font-size: 5em;
            color: var(--primary-color);
            margin-bottom: 20px;
        }
        #onboarding-page h2 {
            font-size: 2em;
            margin-bottom: 10px;
        }
        #onboarding-page p {
            font-size: 1.1em;
            color: var(--text-light);
            margin-bottom: 40px;
        }
        .onboarding-btn {
            background-color: var(--accent-color);
            color: #fff;
            padding: 15px 40px;
            border-radius: 8px;
            font-size: 1.1em;
            cursor: pointer;
            border: none;
            font-weight: 600;
        }
        #dashboard-page .summary-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }
        #dashboard-page .summary-card {
            padding: 20px;
            border-radius: 12px;
            color: #fff;
        }
        #dashboard-page .summary-card.sales {
            background: linear-gradient(45deg, #38A169, #48BB78);
        }
        #dashboard-page .summary-card.profit {
            background: linear-gradient(45deg, #4C51BF, #667EEA);
        }
        #dashboard-page .summary-card .value {
            font-size: 2em;
            font-weight: 700;
            margin-bottom: 5px;
        }
        #dashboard-page .summary-card .label {
            font-size: 0.9em;
        }
        #dashboard-page .chart-container {
            margin-top: 20px;
            height: 200px;
            background-color: var(--card-bg);
            border-radius: 12px;
            padding: 15px;
            position: relative;
        }
        .bar-chart-container {
            display: flex;
            justify-content: space-around;
            align-items: flex-end;
            height: 100%;
        }
        .bar-chart-container .bar {
            width: 15%;
            background-color: var(--primary-color);
            border-radius: 4px 4px 0 0;
            transition: height 0.5s;
        }
        #manage-products-page .product-item {
            display: flex;
            align-items: center;
            gap: 15px;
            padding: 15px;
            border-bottom: 1px solid var(--border-color);
        }
        #manage-products-page .product-item:last-child {
            border-bottom: none;
        }
        #manage-products-page .product-item img {
            width: 60px;
            height: 60px;
            border-radius: 8px;
            object-fit: cover;
        }
        #manage-products-page .product-item .details {
            flex-grow: 1;
        }
        #manage-products-page .product-item .name {
            font-weight: 600;
        }
        #manage-products-page .product-item .price {
            color: var(--primary-color);
            font-weight: 500;
        }
        #sale-history-page .history-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px;
            border-bottom: 1px solid var(--border-color);
        }
        #sale-history-page .history-item:last-child {
            border-bottom: none;
        }
        #sale-history-page .history-item .info {
            flex-grow: 1;
        }
        #sale-history-page .history-item .info h4 {
            margin: 0 0 5px 0;
            font-size: 1.1em;
            font-weight: 600;
        }
        #sale-history-page .history-item .info span {
            font-size: 0.9em;
            color: var(--text-light);
        }
        #sale-history-page .history-item .total {
            font-weight: 700;
            color: var(--primary-color);
            font-size: 1.1em;
        }
        #payment-page .payment-summary-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }
        #payment-page .payment-summary-item span {
            color: var(--text-light);
        }
        #payment-page .payment-summary-item .total {
            font-size: 1.2em;
            font-weight: 700;
            color: var(--primary-color);
        }
        #payment-page .payment-method-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
            margin-top: 20px;
        }
        #payment-page .method-card {
            text-align: center;
            border: 2px solid var(--border-color);
            border-radius: 12px;
            padding: 20px 10px;
            cursor: pointer;
            transition: border-color 0.3s, background-color 0.3s;
        }
        #payment-page .method-card.active {
            border-color: var(--primary-color);
            background-color: var(--green-light);
        }
        #payment-page .method-card .material-icons-outlined {
            font-size: 2.5em;
            color: var(--text-light);
            margin-bottom: 10px;
        }
        #payment-page .method-card.active .material-icons-outlined {
            color: var(--primary-color);
        }
        #payment-page .method-card h4 {
            margin: 0;
            font-weight: 600;
        }
        #payment-page .back-to-cart {
            margin-top: 15px;
            color: var(--text-light);
            text-align: center;
            cursor: pointer;
            font-weight: 500;
        }
        .product-list, .cart-list {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
            gap: 15px;
            list-style: none;
            padding: 0;
            margin: 0;
        }
        .product-card {
            background-color: var(--card-bg);
            border: 1px solid var(--border-color);
            border-radius: 12px;
            overflow: hidden;
            text-align: center;
            box-shadow: 0 4px 10px rgba(0,0,0,0.05);
            transition: transform 0.2s;
            cursor: pointer;
        }
        .product-card:hover {
            transform: translateY(-5px);
        }
        .product-card img {
            width: 100%;
            height: 120px;
            object-fit: cover;
            border-bottom: 1px solid var(--border-color);
        }
        .product-card .info {
            padding: 10px;
        }
        .product-card h3 {
            margin: 0 0 5px 0;
            font-size: 1em;
            font-weight: 600;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        .product-card .price {
            font-weight: 700;
            color: var(--primary-color);
            font-size: 1.1em;
        }
        .product-card .add-btn {
            background-color: var(--primary-color);
            color: #fff;
            border: none;
            padding: 8px 12px;
            margin-top: 10px;
            border-radius: 8px;
            cursor: pointer;
            width: 100%;
            font-size: 0.9em;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 0;
            border-bottom: 1px solid var(--border-color);
        }
        .cart-item:first-child {
            padding-top: 0;
        }
        .cart-item:last-child {
            border-bottom: none;
        }
        .cart-item .item-details {
            display: flex;
            flex-direction: column;
            flex-grow: 1;
        }
        .cart-item .item-details b {
            font-size: 1em;
        }
        .cart-item .item-details span {
            font-size: 0.9em;
            color: var(--text-light);
        }
        .cart-item .quantity-control {
            display: flex;
            align-items: center;
        }
        .cart-item .quantity-control button {
            background-color: var(--bg-color);
            border: 1px solid var(--border-color);
            color: var(--primary-color);
            width: 30px;
            height: 30px;
            border-radius: 50%;
            font-size: 1.2em;
            cursor: pointer;
        }
        .cart-item .quantity-control span {
            margin: 0 10px;
            font-weight: 600;
            width: 20px;
            text-align: center;
        }
        .cart-item .item-price {
            font-weight: 700;
            font-size: 1em;
            width: 80px;
            text-align: right;
        }
        .cart-total {
            padding: 15px;
            border-top: 1px solid var(--border-color);
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 1.2em;
            font-weight: 700;
        }
        .category-list {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 15px;
        }
        .category-card {
            background-color: var(--card-bg);
            border-radius: 12px;
            padding: 20px;
            text-align: center;
            box-shadow: 0 4px 10px rgba(0,0,0,0.05);
            cursor: pointer;
            transition: transform 0.2s;
        }
        .category-card:hover {
            transform: translateY(-5px);
        }
        .category-card .material-icons-outlined {
            font-size: 2.5em;
            color: var(--primary-color);
            margin-bottom: 10px;
        }
        #report-page .chart-container {
            margin-top: 20px;
            height: 200px;
            background-color: var(--card-bg);
            border-radius: 12px;
            padding: 15px;
            position: relative;
        }
        
    </style>
</head>
<body>
    <div class="container">
        <div class="header" id="app-header" style="display: none;">
            <span class="back-btn" onclick="goBack()"><i class="material-icons-outlined">arrow_back</i></span>
            <span class="logo">kiPOS</span>
            <div class="cart-icon" onclick="showPage('cart-page')">
                <i class="material-icons">shopping_cart</i>
                <span id="cart-count" class="cart-count" style="display:none;">0</span>
            </div>
        </div>

        <div class="content" id="app-content">
            <div id="general-loader" class="page loader-page" style="display:none;">
                <div class="loader-gear-wrapper">
                    <i class="material-icons loader-gear" style="font-size: 80px; color: var(--text-light);">settings</i>
                    <i class="material-icons loader-gear-inside">build</i>
                </div>
            </div>
            
            <div id="kipos-loader" class="page loader-page active" style="display: none;">
                <i class="material-icons logo-icon">storefront</i>
                <h1>kiPOS</h1>
            </div>

            <div id="landing-page" class="page" data-flow="auth">
                <i class="material-icons logo-icon">storefront</i>
                <h1>kiPOS</h1>
                <p>Solusi Point of Sales untuk bisnis Anda</p>
                <div class="landing-btn-group">
                    <button class="btn" onclick="showPage('login-page')">Masuk</button>
                    <button class="btn secondary" onclick="showPage('register-page')">Daftar</button>
                </div>
            </div>

            <div id="login-page" class="page auth-container" data-flow="auth">
                <div class="auth-header">
                    <h2>Masuk ke Akun Anda</h2>
                    <p>Selamat datang kembali!</p>
                </div>
                <form class="auth-form" onsubmit="handleLogin(event)">
                    <div class="input-group">
                        <i class="material-icons-outlined">email</i>
                        <input type="email" id="login-email" placeholder="Email" required>
                    </div>
                    <div class="input-group">
                        <i class="material-icons-outlined">lock</i>
                        <input type="password" id="login-password" placeholder="Password" required>
                    </div>
                    <a href="#" onclick="showPage('forgot-password-page')">Lupa password?</a>
                    <button type="submit" class="btn">Masuk</button>
                </form>
                <div class="auth-footer">
                    Belum punya akun? <a href="#" onclick="showPage('register-page')">Daftar sekarang</a>
                </div>
            </div>

            <div id="register-page" class="page auth-container" data-flow="auth">
                <div class="auth-header">
                    <h2>Daftar Toko Baru</h2>
                    <p>Isi data untuk memulai</p>
                </div>
                <form class="auth-form" onsubmit="handleRegister(event)">
                    <div class="input-group">
                        <i class="material-icons-outlined">storefront</i>
                        <input type="text" id="store-name" placeholder="Nama Toko" required>
                    </div>
                    <div class="input-group">
                        <i class="material-icons-outlined">person</i>
                        <input type="text" id="owner-name" placeholder="Nama Pemilik" required>
                    </div>
                    <div class="input-group">
                        <i class="material-icons-outlined">category</i>
                        <select id="business-category">
                            <option value="" disabled selected>Pilih Kategori Bisnis</option>
                            <option value="food_beverage">Makanan & Minuman</option>
                            <option value="retail">Retail</option>
                            <option value="service">Jasa</option>
                            <option value="other">Lainnya</option>
                        </select>
                    </div>
                    <div class="input-group">
                        <i class="material-icons-outlined">email</i>
                        <input type="email" id="register-email" placeholder="Email" required>
                    </div>
                    <div class="input-group">
                        <i class="material-icons-outlined">lock</i>
                        <input type="password" id="register-password" placeholder="Password" required>
                    </div>
                    <button type="submit" class="btn">Daftar</button>
                </form>
                <div class="auth-footer">
                    Sudah punya akun? <a href="#" onclick="showPage('login-page')">Masuk di sini</a>
                </div>
            </div>

            <div id="forgot-password-page" class="page auth-container" data-flow="auth">
                <div class="auth-header">
                    <h2>Lupa Password</h2>
                    <p>Masukkan email untuk verifikasi</p>
                </div>
                <form class="auth-form" onsubmit="handleForgotPassword(event)">
                    <div class="input-group">
                        <i class="material-icons-outlined">email</i>
                        <input type="email" id="forgot-email" placeholder="Email" required>
                    </div>
                    <button type="submit" class="btn">Kirim OTP</button>
                </form>
                <div class="auth-footer">
                    <a href="#" onclick="showPage('login-page')">Kembali ke Login</a>
                </div>
            </div>

            <div id="otp-verification-page" class="page auth-container" data-flow="auth">
                <div class="auth-header">
                    <i class="material-icons-outlined" style="font-size: 3em; color: var(--accent-color);">lock_open</i>
                    <h2>Verifikasi OTP</h2>
                    <p>Kode telah dikirim ke <span id="verification-email-target" style="font-weight: 600;"></span></p>
                </div>
                <form class="auth-form" onsubmit="handleOtpVerification(event)">
                    <div class="otp-inputs">
                        <input type="text" maxlength="1" required oninput="moveToNext(this)">
                        <input type="text" maxlength="1" required oninput="moveToNext(this)">
                        <input type="text" maxlength="1" required oninput="moveToNext(this)">
                        <input type="text" maxlength="1" required oninput="moveToNext(this)">
                        <input type="text" maxlength="1" required oninput="moveToNext(this)">
                        <input type="text" maxlength="1" required oninput="moveToNext(this)">
                    </div>
                    <button type="submit" class="btn">Verifikasi</button>
                </form>
                <div class="auth-footer">
                    Tidak menerima kode? <a href="#">Kirim Ulang</a>
                </div>
            </div>

            <div id="skeleton-loader-page" class="page" style="display:none;">
                <div class="card skeleton-card">
                    <div class="skeleton skeleton-block title"></div>
                    <div class="skeleton skeleton-block text"></div>
                </div>
                <div class="card skeleton-card">
                    <div class="skeleton skeleton-block title"></div>
                    <div class="skeleton skeleton-block text"></div>
                </div>
                <div class="card skeleton-card">
                    <div class="skeleton skeleton-block title"></div>
                    <div class="skeleton skeleton-block text"></div>
                </div>
            </div>

            <div id="onboarding-page" class="page" data-flow="app">
                <i class="material-icons onboarding-icon">local_mall</i>
                <h2>Selamat Datang di kiPOS</h2>
                <p>Aplikasi point of sales mobile yang dirancang untuk kemudahan bisnis Anda.</p>
                <button class="onboarding-btn" onclick="showPageWithLoader('dashboard-page')">Mulai Sekarang</button>
            </div>

            <div id="dashboard-page" class="page" data-flow="app">
                <h2>Dashboard</h2>
                <div class="summary-grid">
                    <div class="summary-card sales">
                        <div class="value" id="total-sales">Rp 0</div>
                        <div class="label">Total Penjualan Hari Ini</div>
                    </div>
                    <div class="summary-card profit">
                        <div class="value" id="total-profit">Rp 0</div>
                        <div class="label">Keuntungan Hari Ini</div>
                    </div>
                </div>
                <div class="card chart-container">
                    <h3>Penjualan Mingguan</h3>
                    <div class="bar-chart-container" id="weekly-sales-chart"></div>
                </div>
            </div>

            <div id="home-page" class="page" data-flow="app">
                <h2>Pilih Kategori</h2>
                <div class="category-list">
                    <div class="card category-card" onclick="showProductList('Makanan')">
                        <i class="material-icons-outlined">restaurant</i>
                        <h3>Makanan</h3>
                    </div>
                    <div class="card category-card" onclick="showProductList('Minuman')">
                        <i class="material-icons-outlined">local_cafe</i>
                        <h3>Minuman</h3>
                    </div>
                    <div class="card category-card" onclick="showProductList('Snack')">
                        <i class="material-icons-outlined">fastfood</i>
                        <h3>Snack</h3>
                    </div>
                </div>
            </div>

            <div id="product-list-page" class="page" data-flow="app">
                <h2 id="product-category-title">Produk</h2>
                <div class="product-list" id="product-items-container"></div>
            </div>

            <div id="cart-page" class="page" data-flow="app">
                <h2>Keranjang Belanja</h2>
                <div id="cart-list"></div>
                <div id="cart-summary" style="display:none;">
                    <div class="cart-total">
                        <span>Total:</span>
                        <span id="cart-total-price">Rp 0</span>
                    </div>
                    <button class="btn" onclick="showPage('payment-page')">Bayar Sekarang</button>
                </div>
                <p id="empty-cart-message">Keranjang belanja Anda kosong.</p>
            </div>

            <div id="payment-page" class="page" data-flow="app">
                <h2>Pembayaran</h2>
                <div class="card">
                    <div class="payment-summary-item">
                        <span>Total Belanja</span>
                        <span id="payment-subtotal">Rp 0</span>
                    </div>
                    <div class="payment-summary-item">
                        <span>Diskon (0%)</span>
                        <span id="payment-discount">Rp 0</span>
                    </div>
                    <hr style="border-color: var(--border-color); margin: 10px 0;">
                    <div class="payment-summary-item total">
                        <span>Total Pembayaran</span>
                        <span id="payment-total-amount">Rp 0</span>
                    </div>
                </div>

                <div class="card">
                    <h3>Pilih Metode Pembayaran</h3>
                    <div class="payment-method-grid">
                        <div class="method-card active" onclick="selectPaymentMethod(this)">
                            <i class="material-icons-outlined">payments</i>
                            <h4>Tunai</h4>
                        </div>
                        <div class="method-card" onclick="selectPaymentMethod(this)">
                            <i class="material-icons-outlined">qr_code_2</i>
                            <h4>QRIS</h4>
                        </div>
                    </div>
                    <button class="btn" style="margin-top: 20px;" onclick="completePayment()">Konfirmasi Pembayaran</button>
                    <p class="back-to-cart" onclick="showPage('cart-page')">Kembali ke Keranjang</p>
                </div>
            </div>
            
            <div id="manage-products-page" class="page" data-flow="app">
                <h2>Manajemen Produk</h2>
                <div class="card" id="manage-product-list"></div>
            </div>

            <div id="sale-history-page" class="page" data-flow="app">
                <h2>Riwayat Penjualan</h2>
                <div class="card" id="sale-history-list"></div>
            </div>

            <div id="report-page" class="page" data-flow="app">
                <h2>Laporan Penjualan</h2>
                <div class="card chart-container">
                    <h3>Penjualan Bulan Ini</h3>
                    <div class="bar-chart-container" id="monthly-sales-chart"></div>
                </div>
            </div>
        </div>

        <div class="footer-nav" id="app-footer-nav" style="display: none;">
            <button id="dashboard-btn" class="active" onclick="showPageWithLoader('dashboard-page')">
                <i class="material-icons">dashboard</i>
                Dashboard
            </button>
            <button id="home-btn" onclick="showPageWithLoader('home-page')">
                <i class="material-icons">sell</i>
                Penjualan
            </button>
            <button id="manage-products-btn" onclick="showPageWithLoader('manage-products-page')">
                <i class="material-icons">inventory_2</i>
                Produk
            </button>
            <button id="sale-history-btn" onclick="showPageWithLoader('sale-history-page')">
                <i class="material-icons">history</i>
                Riwayat
            </button>
            <button id="report-btn" onclick="showPageWithLoader('report-page')">
                <i class="material-icons">bar_chart</i>
                Laporan
            </button>
        </div>
    </div>

    <script>
        const products = {
            'Makanan': [
                { id: 1, name: 'Nasi Goreng Spesial', price: 20000, img: 'https://images.unsplash.com/photo-1546069901-ba9599a7e63c?w=500' },
                { id: 2, name: 'Ayam Bakar Madu', price: 25000, img: 'https://images.unsplash.com/photo-1571091718767-18b5b1457add?w=500' },
                { id: 3, name: 'Sate Ayam Bumbu Kacang', price: 18000, img: 'https://images.unsplash.com/photo-1568901346375-23c9450c58cd?w=500' },
            ],
            'Minuman': [
                { id: 4, name: 'Es Teh Manis', price: 5000, img: 'https://images.unsplash.com/photo-1521587765099-ef13a693c06e?w=500' },
                { id: 5, name: 'Kopi Susu Gula Aren', price: 12000, img: 'https://images.unsplash.com/photo-1551028150-64b9f398f67e?w=500' },
                { id: 6, name: 'Jus Jeruk Segar', price: 10000, img: 'https://images.unsplash.com/photo-1579737207905-ac1ae933f7ed?w=500' },
            ],
            'Snack': [
                { id: 7, name: 'Kentang Goreng Keju', price: 15000, img: 'https://images.unsplash.com/photo-1628178129037-184514ac8f25?w=500' },
                { id: 8, name: 'Roti Bakar Coklat', price: 12000, img: 'https://images.unsplash.com/photo-1558961363-fa14f3299a9a?w=500' },
            ]
        };
        
        let cart = JSON.parse(localStorage.getItem('kipos_cart')) || {};
        let saleHistory = JSON.parse(localStorage.getItem('kipos_sale_history')) || [];
        let currentPage = 'kipos-loader';
        const pageHistory = [];
        const isVerifiedDevice = localStorage.getItem('is_verified_device') === 'true';

        document.addEventListener('DOMContentLoaded', () => {
            showPage('kipos-loader');
            setTimeout(() => {
                showPage('landing-page');
            }, 3000); 
        });

        function showAppUI(show) {
            const header = document.getElementById('app-header');
            const footer = document.getElementById('app-footer-nav');
            header.style.display = show ? 'flex' : 'none';
            footer.style.display = show ? 'flex' : 'none';
        }

        function saveCart() {
            localStorage.setItem('kipos_cart', JSON.stringify(cart));
            updateCartCount();
            renderCart();
            updatePaymentPage();
        }

        function saveSaleHistory() {
            localStorage.setItem('kipos_sale_history', JSON.stringify(saleHistory));
            renderDashboard();
            renderSaleHistory();
            renderReports();
        }

        function showPage(pageId) {
            const flow = document.getElementById(pageId).getAttribute('data-flow');
            
            if (flow === 'app') {
                showAppUI(true);
            } else {
                showAppUI(false);
            }

            if (pageId !== currentPage && flow === document.getElementById(currentPage).getAttribute('data-flow')) {
                 pageHistory.push(currentPage);
            } else if (flow !== document.getElementById(currentPage).getAttribute('data-flow')) {
                 pageHistory.length = 0;
            }

            document.querySelectorAll('.page').forEach(page => page.style.display = 'none');
            document.getElementById(pageId).style.display = 'block';

            document.querySelectorAll('.footer-nav button').forEach(btn => btn.classList.remove('active'));
            const footerBtn = document.getElementById(pageId.replace('-page', '-btn'));
            if(footerBtn) {
                footerBtn.classList.add('active');
            }

            const header = document.querySelector('.header');
            if (pageId === 'product-list-page' || pageId === 'payment-page') {
                header.classList.add('app-mode');
            } else if (flow === 'app' && pageId !== 'dashboard-page' && pageId !== 'home-page') {
                header.classList.add('app-mode');
            } else {
                header.classList.remove('app-mode');
            }
            
            currentPage = pageId;
        }
        
        function goBack() {
            if (pageHistory.length > 0) {
                const prevPage = pageHistory.pop();
                showPage(prevPage);
            } else {
                showPage('dashboard-page');
            }
        }

        function showPageWithLoader(pageId) {
            showPage('general-loader');
            setTimeout(() => {
                showPage(pageId);
                if (pageId === 'dashboard-page') renderDashboard();
                if (pageId === 'manage-products-page') renderProductManagement();
                if (pageId === 'sale-history-page') renderSaleHistory();
                if (pageId === 'report-page') renderReports();
            }, 1000);
        }

        // --- Auth Functions ---
        function handleLogin(event) {
            event.preventDefault();
            const email = document.getElementById('login-email').value;
            const password = document.getElementById('login-password').value;
            
            if (email === 'admin@kipos.com' && password === 'password') {
                if (!isVerifiedDevice) {
                    document.getElementById('verification-email-target').textContent = email;
                    showPage('otp-verification-page');
                } else {
                    showPageWithLoader('onboarding-page');
                }
            } else {
                alert('Email atau password salah!');
            }
        }

        function handleRegister(event) {
            event.preventDefault();
            const storeName = document.getElementById('store-name').value;
            const ownerName = document.getElementById('owner-name').value;
            const businessCategory = document.getElementById('business-category').value;
            const email = document.getElementById('register-email').value;
            const password = document.getElementById('register-password').value;
            
            localStorage.setItem('store_name', storeName);
            document.getElementById('verification-email-target').textContent = email;
            alert('Registrasi berhasil! Silakan cek email Anda untuk kode verifikasi.');
            showPage('otp-verification-page');
        }

        function handleForgotPassword(event) {
            event.preventDefault();
            const email = document.getElementById('forgot-email').value;
            document.getElementById('verification-email-target').textContent = email;
            alert('Kode OTP untuk reset password sudah dikirim ke email Anda.');
            showPage('otp-verification-page');
        }

        function handleOtpVerification(event) {
            event.preventDefault();
            const otp = [...document.querySelectorAll('#otp-verification-page .otp-inputs input')].map(input => input.value).join('');
            if (otp === '123456') {
                localStorage.setItem('is_verified_device', 'true');
                alert('Verifikasi berhasil!');
                showPageWithLoader('onboarding-page');
            } else {
                alert('Kode OTP salah!');
            }
        }

        function moveToNext(currentInput) {
            if (currentInput.value.length === 1) {
                const nextInput = currentInput.nextElementSibling;
                if (nextInput) {
                    nextInput.focus();
                }
            }
        }

        // --- App Logic (Same as v4) ---
        function showProductList(category) {
            const productListContainer = document.getElementById('product-items-container');
            const categoryTitle = document.getElementById('product-category-title');
            productListContainer.innerHTML = '';
            categoryTitle.textContent = category;
            
            const selectedProducts = products[category];
            selectedProducts.forEach(product => {
                const productCard = document.createElement('div');
                productCard.className = 'product-card';
                productCard.innerHTML = `
                    <img src="${product.img}" alt="${product.name}">
                    <div class="info">
                        <h3>${product.name}</h3>
                        <p class="price">Rp ${product.price.toLocaleString('id-ID')}</p>
                        <button class="add-btn" onclick="addToCart(${product.id}, '${product.name}', ${product.price}, '${product.img}')">
                            <i class="material-icons-outlined" style="font-size: 1.2em; margin-right: 5px;">add_circle_outline</i>
                            Tambah
                        </button>
                    </div>
                `;
                productListContainer.appendChild(productCard);
            });
            showPage('product-list-page');
        }

        function addToCart(id, name, price, img) {
            if (cart[id]) {
                cart[id].quantity++;
            } else {
                cart[id] = { id, name, price, img, quantity: 1 };
            }
            saveCart();
            alert(`${name} ditambahkan ke keranjang!`);
        }

        function updateCartCount() {
            const totalItems = Object.values(cart).reduce((sum, item) => sum + item.quantity, 0);
            const cartCountElement = document.getElementById('cart-count');
            cartCountElement.textContent = totalItems;
            cartCountElement.style.display = totalItems > 0 ? 'flex' : 'none';
        }

        function renderCart() {
            const cartList = document.getElementById('cart-list');
            const cartSummary = document.getElementById('cart-summary');
            const emptyCartMessage = document.getElementById('empty-cart-message');
            cartList.innerHTML = '';

            const cartItems = Object.values(cart);
            if (cartItems.length === 0) {
                emptyCartMessage.style.display = 'block';
                cartSummary.style.display = 'none';
                return;
            }

            emptyCartMessage.style.display = 'none';
            cartSummary.style.display = 'block';

            let subtotal = 0;
            cartItems.forEach(item => {
                const itemTotal = item.price * item.quantity;
                subtotal += itemTotal;
                const cartItemElement = document.createElement('div');
                cartItemElement.className = 'cart-item';
                cartItemElement.innerHTML = `
                    <div class="item-details">
                        <b>${item.name}</b>
                        <span>Rp ${item.price.toLocaleString('id-ID')}</span>
                    </div>
                    <div class="quantity-control">
                        <button onclick="updateQuantity(${item.id}, -1)">-</button>
                        <span>${item.quantity}</span>
                        <button onclick="updateQuantity(${item.id}, 1)">+</button>
                    </div>
                    <div class="item-price">
                        Rp ${itemTotal.toLocaleString('id-ID')}
                    </div>
                `;
                cartList.appendChild(cartItemElement);
            });

            document.getElementById('cart-total-price').textContent = `Rp ${subtotal.toLocaleString('id-ID')}`;
        }

        function updateQuantity(id, change) {
            if (cart[id]) {
                cart[id].quantity += change;
                if (cart[id].quantity <= 0) {
                    delete cart[id];
                }
            }
            saveCart();
        }

        function updatePaymentPage() {
            const subtotal = Object.values(cart).reduce((sum, item) => sum + item.price * item.quantity, 0);
            document.getElementById('payment-subtotal').textContent = `Rp ${subtotal.toLocaleString('id-ID')}`;
            document.getElementById('payment-total-amount').textContent = `Rp ${subtotal.toLocaleString('id-ID')}`;
        }

        function selectPaymentMethod(element) {
            document.querySelectorAll('.method-card').forEach(card => card.classList.remove('active'));
            element.classList.add('active');
        }

        function completePayment() {
            if (Object.keys(cart).length === 0) {
                alert('Keranjang belanja kosong!');
                return;
            }

            const transactionTotal = Object.values(cart).reduce((sum, item) => sum + item.price * item.quantity, 0);
            const newTransaction = {
                id: Date.now(),
                date: new Date().toLocaleDateString('id-ID', { day: 'numeric', month: 'short', year: 'numeric' }),
                items: JSON.parse(JSON.stringify(cart)),
                total: transactionTotal,
            };
            saleHistory.push(newTransaction);
            
            cart = {};
            saveCart();
            saveSaleHistory();
            
            alert('Pembayaran berhasil! Total: Rp ' + transactionTotal.toLocaleString('id-ID'));
            showPageWithLoader('home-page');
        }

        function renderDashboard() {
            const todaySales = saleHistory
                .filter(sale => new Date(sale.id).toDateString() === new Date().toDateString())
                .reduce((sum, sale) => sum + sale.total, 0);
            
            document.getElementById('total-sales').textContent = `Rp ${todaySales.toLocaleString('id-ID')}`;
            document.getElementById('total-profit').textContent = `Rp ${(todaySales * 0.3).toLocaleString('id-ID')}`; 

            const weeklySalesData = [100000, 150000, 200000, 180000, 250000, 300000, todaySales];
            const weeklyChart = document.getElementById('weekly-sales-chart');
            weeklyChart.innerHTML = '';
            weeklySalesData.forEach(value => {
                const bar = document.createElement('div');
                bar.className = 'bar';
                bar.style.height = `${(value / 350000) * 100}%`; 
                weeklyChart.appendChild(bar);
            });
        }
        
        function renderProductManagement() {
            const productList = document.getElementById('manage-product-list');
            productList.innerHTML = '';
            
            const allProducts = [...products['Makanan'], ...products['Minuman'], ...products['Snack']];
            allProducts.forEach(product => {
                const item = document.createElement('div');
                item.className = 'product-item';
                item.innerHTML = `
                    <img src="${product.img}" alt="${product.name}">
                    <div class="details">
                        <div class="name">${product.name}</div>
                        <div class="price">Rp ${product.price.toLocaleString('id-ID')}</div>
                    </div>
                `;
                productList.appendChild(item);
            });
        }
        
        function renderSaleHistory() {
            const historyList = document.getElementById('sale-history-list');
            historyList.innerHTML = '';
            
            if (saleHistory.length === 0) {
                historyList.innerHTML = `<p style="text-align: center; color: var(--text-light);">Belum ada riwayat penjualan.</p>`;
                return;
            }
            
            saleHistory.reverse().forEach(sale => {
                const item = document.createElement('div');
                item.className = 'history-item';
                item.innerHTML = `
                    <div class="info">
                        <h4>Transaksi #${sale.id.toString().slice(-6)}</h4>
                        <span>${sale.date}</span>
                    </div>
                    <div class="total">
                        Rp ${sale.total.toLocaleString('id-ID')}
                    </div>
                `;
                historyList.appendChild(item);
            });
        }
        
        function renderReports() {
            const monthlySalesData = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120]; 
            const monthlyChart = document.getElementById('monthly-sales-chart');
            monthlyChart.innerHTML = '';
            monthlySalesData.forEach(value => {
                const bar = document.createElement('div');
                bar.className = 'bar';
                bar.style.height = `${(value / 120) * 100}%`;
                monthlyChart.appendChild(bar);
            });
        }
    </script>
</body>
</html>