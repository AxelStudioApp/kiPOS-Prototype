<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>kiPOS - Mobile Point of Sales</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Outlined" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.rawgit.com/davidshimjs/qrcodejs/gh-pages/qrcode.min.js"></script>
    <style>
        :root {
            --primary-color: #38A169;
            --secondary-color: #F6AD55;
            --text-color: #2D3748;
            --text-light: #718096;
            --bg-color: #EDF2F7;
            --card-bg: #FFFFFF;
            --border-color: #E2E8F0;
            --accent-color: #4C51BF;
            --green-light: #F0FFF4;
            --blue-light: #EBF4FF;
            --red-light: #FFF5F5;
            --danger-color: #E53E3E;
        }

        [data-theme='dark'] {
            --primary-color: #48BB78;
            --secondary-color: #F6E05E;
            --text-color: #CBD5E0;
            --text-light: #A0AEC0;
            --bg-color: #1A202C;
            --card-bg: #2D3748;
            --border-color: #4A5568;
            --accent-color: #667EEA;
            --green-light: #2C5237;
            --blue-light: #2A4365;
            --red-light: #443333;
            --danger-color: #F56565;
        }

        * {
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            margin: 0;
            padding: 0;
            background-color: var(--bg-color);
            color: var(--text-color);
            transition: background-color 0.3s, color 0.3s;
        }

        .container {
            max-width: 480px;
            margin: auto;
            background-color: var(--card-bg);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            box-shadow: 0 0 20px rgba(0,0,0,0.05);
            position: relative;
            overflow: hidden;
        }

        /* --- Global Components --- */
        .header {
            background-color: var(--primary-color);
            color: #fff;
            padding: 15px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: sticky;
            top: 0;
            z-index: 1000;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            transition: background-color 0.3s;
        }

        .header .logo {
            font-size: 1.5em;
            font-weight: 700;
        }

        .header .cart-icon, .header .menu-icon {
            font-size: 1.8em;
            cursor: pointer;
            position: relative;
        }
        
        .header .menu-icon {
            display: none;
        }
        .header.app-mode .menu-icon {
            display: block;
        }
        .header.app-mode .cart-icon {
            display: none;
        }

        .cart-count {
            position: absolute;
            top: -5px;
            right: -5px;
            background-color: var(--secondary-color);
            color: #fff;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            font-size: 0.8em;
            font-weight: 600;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .header .back-btn {
            font-size: 1.5em;
            cursor: pointer;
            display: none;
        }
        .header.app-mode .back-btn {
            display: block;
        }
        .header.app-mode .logo {
            display: none;
        }

        .content {
            flex-grow: 1;
            overflow-y: auto;
            padding: 15px;
        }
        
        h2 {
            font-weight: 600;
            font-size: 1.5em;
            margin-top: 0;
            margin-bottom: 20px;
            color: var(--text-color);
        }

        .footer-nav {
            display: flex;
            justify-content: space-around;
            padding: 10px;
            border-top: 1px solid var(--border-color);
            position: sticky;
            bottom: 0;
            background-color: var(--card-bg);
            z-index: 1000;
            box-shadow: 0 -2px 10px rgba(0,0,0,0.05);
            transition: background-color 0.3s, border-color 0.3s;
        }

        .footer-nav button {
            background: none;
            border: none;
            color: var(--text-light);
            cursor: pointer;
            font-size: 0.8em;
            font-weight: 600;
            padding: 5px;
            display: flex;
            flex-direction: column;
            align-items: center;
            transition: color 0.3s;
        }

        .footer-nav button .material-icons {
            font-size: 1.5em;
            margin-bottom: 2px;
        }

        .footer-nav button.active {
            color: var(--primary-color);
        }

        .page {
            display: none;
        }

        .page.active {
            display: block;
        }
        
        .card {
            background-color: var(--card-bg);
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 15px;
            box-shadow: 0 4px 10px rgba(0,0,0,0.05);
            transition: background-color 0.3s, box-shadow 0.3s;
        }

        .btn {
            background-color: var(--primary-color);
            color: #fff;
            padding: 15px;
            text-align: center;
            font-size: 1.2em;
            font-weight: 600;
            border: none;
            width: 100%;
            border-radius: 8px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        .btn:hover {
            background-color: #2F855A;
        }
        .btn.secondary {
            background-color: transparent;
            color: var(--primary-color);
            border: 2px solid var(--primary-color);
        }
        .btn.secondary:hover {
            background-color: var(--green-light);
        }
        .btn.danger {
            background-color: var(--danger-color);
        }
        .btn.danger:hover {
            background-color: #C53030;
        }

        /* --- Custom Loaders & Skeletons --- */
        .loader-page {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            text-align: center;
            background-color: var(--bg-color);
        }
        
        .loader-gear-wrapper {
            position: relative;
            width: 80px;
            height: 80px;
        }
        .loader-gear {
            animation: spin 3s linear infinite;
        }
        .loader-gear-inside {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: var(--bg-color);
            font-size: 1.2em;
        }
        
        .loader-kipos .logo-icon {
            font-size: 5em;
            color: var(--primary-color);
            animation: pulse-loader 1.5s infinite;
        }
        .loader-kipos h1 {
            font-size: 2em;
            font-weight: 700;
            color: var(--primary-color);
            margin: 10px 0;
            animation: pulse-loader 1.5s infinite;
            animation-delay: 0.2s;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        @keyframes pulse-loader {
            0% { opacity: 0.5; }
            50% { opacity: 1; }
            100% { opacity: 0.5; }
        }

        .skeleton {
            animation: pulse 1.5s infinite;
        }
        .skeleton-block {
            background-color: var(--border-color);
            border-radius: 4px;
        }
        .skeleton-card {
            display: flex;
            flex-direction: column;
            gap: 10px;
            padding: 15px;
            border-radius: 12px;
            background-color: var(--card-bg);
            margin-bottom: 15px;
        }
        .skeleton-card .title {
            width: 70%;
            height: 20px;
        }
        .skeleton-card .text {
            width: 100%;
            height: 15px;
        }
        @keyframes pulse {
            0% { opacity: 0.5; }
            50% { opacity: 1; }
            100% { opacity: 0.5; }
        }

        /* --- Landing Page --- */
        #landing-page {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            padding: 20px;
        }
        #landing-page .logo-icon {
            font-size: 5em;
            color: var(--primary-color);
            margin-bottom: 20px;
        }
        #landing-page h1 {
            font-size: 2.5em;
            font-weight: 700;
            margin-bottom: 5px;
        }
        #landing-page p {
            font-size: 1.1em;
            color: var(--text-light);
            margin-bottom: 40px;
        }
        .landing-btn-group {
            width: 100%;
        }
        .landing-btn-group .btn {
            margin-bottom: 10px;
        }

        /* --- Auth Pages --- */
        .auth-container {
            display: flex;
            flex-direction: column;
            justify-content: center;
            padding: 20px;
            text-align: center;
        }
        .auth-container .auth-header {
            margin-bottom: 40px;
        }
        .auth-container .auth-header h2 {
            margin-bottom: 5px;
        }
        .auth-container .auth-header p {
            color: var(--text-light);
        }
        .auth-form {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }
        .auth-form .input-group {
            position: relative;
        }
        .auth-form .input-group .material-icons-outlined {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-light);
            font-size: 1.2em;
        }
        .auth-form input, .auth-form select {
            width: 100%;
            padding: 15px 15px 15px 50px;
            border-radius: 8px;
            border: 1px solid var(--border-color);
            font-family: 'Poppins', sans-serif;
            font-size: 1em;
            background-color: var(--bg-color);
            color: var(--text-color);
            transition: background-color 0.3s, border-color 0.3s, color 0.3s;
        }
        .auth-form select {
            padding-left: 50px;
            appearance: none;
            background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%23718096'%3e%3cpath d='M7 10l5 5 5-5z'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 15px center;
            background-size: 1em;
        }
        .auth-form a {
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 500;
            font-size: 0.9em;
        }
        .auth-form .otp-inputs {
            display: flex;
            justify-content: space-between;
            gap: 10px;
        }
        .auth-form .otp-inputs input {
            width: 50px;
            padding: 15px 0;
            text-align: center;
            background-color: var(--card-bg);
            border: 1px solid var(--border-color);
            font-weight: 600;
        }
        .auth-footer {
            margin-top: 20px;
            color: var(--text-light);
        }
        .auth-footer a {
            font-weight: 600;
        }

        /* --- Other Pages --- */
        #onboarding-page {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            padding: 20px;
        }
        #onboarding-page .onboarding-icon {
            font-size: 5em;
            color: var(--primary-color);
            margin-bottom: 20px;
        }
        #onboarding-page h2 {
            font-size: 2em;
            margin-bottom: 10px;
        }
        #onboarding-page p {
            font-size: 1.1em;
            color: var(--text-light);
            margin-bottom: 40px;
        }
        .onboarding-btn {
            background-color: var(--accent-color);
            color: #fff;
            padding: 15px 40px;
            border-radius: 8px;
            font-size: 1.1em;
            cursor: pointer;
            border: none;
            font-weight: 600;
        }

        #dashboard-page .summary-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }
        #dashboard-page .summary-card {
            padding: 20px;
            border-radius: 12px;
            color: #fff;
        }
        #dashboard-page .summary-card.sales {
            background: linear-gradient(45deg, #38A169, #48BB78);
        }
        #dashboard-page .summary-card.profit {
            background: linear-gradient(45deg, #4C51BF, #667EEA);
        }
        #dashboard-page .summary-card .value {
            font-size: 2em;
            font-weight: 700;
            margin-bottom: 5px;
        }
        #dashboard-page .summary-card .label {
            font-size: 0.9em;
        }
        #dashboard-page .top-products-list {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        #dashboard-page .top-products-list li {
            padding: 10px 0;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        #dashboard-page .top-products-list li:last-child {
            border-bottom: none;
        }
        
        .chart-container {
            margin-top: 20px;
            height: 250px;
            background-color: var(--card-bg);
            border-radius: 12px;
            padding: 15px;
            position: relative;
        }

        .category-filter {
            display: flex;
            gap: 10px;
            margin-bottom: 15px;
            overflow-x: auto;
            -webkit-overflow-scrolling: touch;
            padding-bottom: 5px;
            white-space: nowrap;
        }
        .category-filter button {
            background-color: var(--bg-color);
            border: 1px solid var(--border-color);
            color: var(--text-color);
            padding: 10px 15px;
            border-radius: 20px;
            font-size: 0.9em;
            cursor: pointer;
            transition: background-color 0.3s, border-color 0.3s;
            flex-shrink: 0;
        }
        .category-filter button.active {
            background-color: var(--primary-color);
            color: #fff;
            border-color: var(--primary-color);
        }
        
        #manage-products-page .product-item {
            display: flex;
            align-items: center;
            gap: 15px;
            padding: 15px;
            border-bottom: 1px solid var(--border-color);
        }
        #manage-products-page .product-item:last-child {
            border-bottom: none;
        }
        #manage-products-page .product-item img {
            width: 60px;
            height: 60px;
            border-radius: 8px;
            object-fit: cover;
        }
        #manage-products-page .product-item .details {
            flex-grow: 1;
        }
        #manage-products-page .product-item .name {
            font-weight: 600;
        }
        #manage-products-page .product-item .price {
            color: var(--primary-color);
            font-weight: 500;
        }
        #manage-products-page .product-item .action-buttons {
            display: flex;
            gap: 5px;
        }
        #manage-products-page .product-item .action-buttons button {
            background: none;
            border: none;
            cursor: pointer;
            font-size: 1.2em;
            color: var(--text-light);
        }
        #manage-products-page .product-item .action-buttons button.edit {
            color: var(--primary-color);
        }
        #manage-products-page .product-item .action-buttons button.delete {
            color: var(--danger-color);
        }
        #manage-products-page .add-product-btn {
            background-color: var(--accent-color);
            color: #fff;
            border: none;
            padding: 15px;
            border-radius: 8px;
            font-size: 1.1em;
            font-weight: 600;
            width: 100%;
            margin-top: 15px;
            cursor: pointer;
        }
        
        #sale-history-page .history-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px;
            border-bottom: 1px solid var(--border-color);
        }
        #sale-history-page .history-item:last-child {
            border-bottom: none;
        }
        #sale-history-page .history-item .info {
            flex-grow: 1;
        }
        #sale-history-page .history-item .info h4 {
            margin: 0 0 5px 0;
            font-size: 1.1em;
            font-weight: 600;
        }
        #sale-history-page .history-item .info span {
            font-size: 0.9em;
            color: var(--text-light);
        }
        #sale-history-page .history-item .total {
            font-weight: 700;
            color: var(--primary-color);
            font-size: 1.1em;
        }
        
        #payment-page .discount-container {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }
        #payment-page .discount-container input {
            flex-grow: 1;
            padding: 10px;
            border-radius: 8px 0 0 8px;
            border: 1px solid var(--border-color);
            font-size: 1em;
            background-color: var(--bg-color);
            color: var(--text-color);
        }
        #payment-page .discount-container button {
            background-color: var(--secondary-color);
            color: #fff;
            border: none;
            padding: 10px 15px;
            border-radius: 0 8px 8px 0;
            cursor: pointer;
            font-weight: 600;
        }
        #payment-page .payment-summary-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }
        #payment-page .payment-summary-item span {
            color: var(--text-light);
        }
        #payment-page .payment-summary-item .total {
            font-size: 1.2em;
            font-weight: 700;
            color: var(--primary-color);
        }
        #payment-page .payment-method-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
            margin-top: 20px;
        }
        #payment-page .method-card {
            text-align: center;
            border: 2px solid var(--border-color);
            border-radius: 12px;
            padding: 20px 10px;
            cursor: pointer;
            transition: border-color 0.3s, background-color 0.3s;
        }
        #payment-page .method-card.active {
            border-color: var(--primary-color);
            background-color: var(--green-light);
        }
        #payment-page .method-card .material-icons-outlined {
            font-size: 2.5em;
            color: var(--text-light);
            margin-bottom: 10px;
        }
        #payment-page .method-card.active .material-icons-outlined {
            color: var(--primary-color);
        }
        #payment-page .method-card h4 {
            margin: 0;
            font-weight: 600;
        }
        #payment-page .back-to-cart {
            margin-top: 15px;
            color: var(--text-light);
            text-align: center;
            cursor: pointer;
            font-weight: 500;
        }
        #payment-page #qr-code-container {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 15px;
            padding: 20px;
            background-color: var(--bg-color);
            border-radius: 12px;
        }
        .product-list {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
            gap: 15px;
            list-style: none;
            padding: 0;
            margin: 0;
        }
        .product-card {
            background-color: var(--card-bg);
            border: 1px solid var(--border-color);
            border-radius: 12px;
            overflow: hidden;
            text-align: center;
            box-shadow: 0 4px 10px rgba(0,0,0,0.05);
            transition: transform 0.2s;
            cursor: pointer;
        }
        .product-card:hover {
            transform: translateY(-5px);
        }
        .product-card img {
            width: 100%;
            height: 120px;
            object-fit: cover;
            border-bottom: 1px solid var(--border-color);
        }
        .product-card .info {
            padding: 10px;
        }
        .product-card h3 {
            margin: 0 0 5px 0;
            font-size: 1em;
            font-weight: 600;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        .product-card .price {
            font-weight: 700;
            color: var(--primary-color);
            font-size: 1.1em;
        }
        .product-card .add-btn {
            background-color: var(--primary-color);
            color: #fff;
            border: none;
            padding: 8px 12px;
            margin-top: 10px;
            border-radius: 8px;
            cursor: pointer;
            width: 100%;
            font-size: 0.9em;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 0;
            border-bottom: 1px solid var(--border-color);
        }
        .cart-item:first-child {
            padding-top: 0;
        }
        .cart-item:last-child {
            border-bottom: none;
        }
        .cart-item .item-details {
            display: flex;
            flex-direction: column;
            flex-grow: 1;
        }
        .cart-item .item-details b {
            font-size: 1em;
        }
        .cart-item .item-details span {
            font-size: 0.9em;
            color: var(--text-light);
        }
        .cart-item .quantity-control {
            display: flex;
            align-items: center;
        }
        .cart-item .quantity-control button {
            background-color: var(--bg-color);
            border: 1px solid var(--border-color);
            color: var(--primary-color);
            width: 30px;
            height: 30px;
            border-radius: 50%;
            font-size: 1.2em;
            cursor: pointer;
        }
        .cart-item .quantity-control span {
            margin: 0 10px;
            font-weight: 600;
            width: 20px;
            text-align: center;
        }
        .cart-item .item-price {
            font-weight: 700;
            font-size: 1em;
            width: 80px;
            text-align: right;
        }
        .cart-total {
            padding: 15px;
            border-top: 1px solid var(--border-color);
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 1.2em;
            font-weight: 700;
        }
        .category-list {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 15px;
        }
        .category-card {
            background-color: var(--card-bg);
            border-radius: 12px;
            padding: 20px;
            text-align: center;
            box-shadow: 0 4px 10px rgba(0,0,0,0.05);
            cursor: pointer;
            transition: transform 0.2s;
        }
        .category-card:hover {
            transform: translateY(-5px);
        }
        .category-card .material-icons-outlined {
            font-size: 2.5em;
            color: var(--primary-color);
            margin-bottom: 10px;
        }
        #report-page .chart-container {
            margin-top: 20px;
            height: 250px;
            background-color: var(--card-bg);
            border-radius: 12px;
            padding: 15px;
            position: relative;
        }

        #settings-page .settings-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 0;
            border-bottom: 1px solid var(--border-color);
        }
        #settings-page .settings-item:last-child {
            border-bottom: none;
        }
        .switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }
        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }
        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: .4s;
            border-radius: 34px;
        }
        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }
        input:checked + .slider {
            background-color: var(--primary-color);
        }
        input:checked + .slider:before {
            transform: translateX(26px);
        }

        #profile-page .profile-form {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }
        #profile-page .profile-form input {
            width: 100%;
            padding: 15px;
            border-radius: 8px;
            border: 1px solid var(--border-color);
            font-family: 'Poppins', sans-serif;
            font-size: 1em;
            background-color: var(--bg-color);
            color: var(--text-color);
        }
        #profile-page .profile-form .profile-avatar {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            background-color: var(--border-color);
            margin: 0 auto 20px auto;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 3em;
            color: var(--text-light);
        }

        .modal {
            position: fixed;
            z-index: 2000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            transition: opacity 0.3s;
            opacity: 0;
            visibility: hidden;
        }
        .modal.active {
            opacity: 1;
            visibility: visible;
        }
        .modal-content {
            background-color: var(--card-bg);
            padding: 25px;
            border-radius: 12px;
            width: 90%;
            max-width: 400px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.2);
            position: relative;
        }
        .modal-content .close-btn {
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 1.5em;
            cursor: pointer;
            color: var(--text-light);
        }
        .modal-content h3 {
            margin-top: 0;
            margin-bottom: 20px;
            font-weight: 600;
        }
        .modal-content .form-group {
            margin-bottom: 15px;
        }
        .modal-content label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
        }
        .modal-content input, .modal-content select {
            width: 100%;
            padding: 10px;
            border-radius: 8px;
            border: 1px solid var(--border-color);
            background-color: var(--bg-color);
            color: var(--text-color);
        }
        .modal-content button {
            margin-top: 15px;
        }

        .notification-container {
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 3000;
            width: 90%;
            max-width: 400px;
        }
        .notification {
            background-color: var(--primary-color);
            color: #fff;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 10px;
            opacity: 0;
            visibility: hidden;
            transform: translateY(20px);
            transition: opacity 0.3s, transform 0.3s, visibility 0.3s;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        .notification.show {
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
        }
        .notification.error {
            background-color: var(--danger-color);
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header" id="app-header" style="display: none;">
            <span class="back-btn" onclick="goBack()"><i class="material-icons-outlined">arrow_back</i></span>
            <span class="logo">kiPOS</span>
            <div class="cart-icon" onclick="showPage('cart-page')">
                <i class="material-icons">shopping_cart</i>
                <span id="cart-count" class="cart-count" style="display:none;">0</span>
            </div>
            <div class="menu-icon" onclick="showPage('settings-page')">
                <i class="material-icons-outlined">menu</i>
            </div>
        </div>

        <div class="content" id="app-content">
            <div id="general-loader" class="page loader-page" style="display:none;">
                <div class="loader-gear-wrapper">
                    <i class="material-icons loader-gear" style="font-size: 80px; color: var(--text-light);">settings</i>
                    <i class="material-icons loader-gear-inside">build</i>
                </div>
            </div>
            
            <div id="kipos-loader" class="page loader-page active" style="display: none;">
                <i class="material-icons logo-icon">storefront</i>
                <h1>kiPOS</h1>
            </div>

            <div id="landing-page" class="page" data-flow="auth">
                <i class="material-icons logo-icon">storefront</i>
                <h1>kiPOS</h1>
                <p data-translate="welcome">Solusi Point of Sales untuk bisnis Anda</p>
                <div class="landing-btn-group">
                    <button class="btn" onclick="showPage('login-page')" data-translate="login">Masuk</button>
                    <button class="btn secondary" onclick="showPage('register-page')" data-translate="register">Daftar</button>
                </div>
            </div>

            <div id="login-page" class="page auth-container" data-flow="auth">
                <div class="auth-header">
                    <h2>Masuk ke Akun Anda</h2>
                    <p>Selamat datang kembali!</p>
                </div>
                <form class="auth-form" onsubmit="handleLogin(event)">
                    <div class="input-group">
                        <i class="material-icons-outlined">email</i>
                        <input type="email" id="login-email" placeholder="Email" required>
                    </div>
                    <div class="input-group">
                        <i class="material-icons-outlined">lock</i>
                        <input type="password" id="login-password" placeholder="Password" required>
                    </div>
                    <a href="#" onclick="showPage('forgot-password-page')">Lupa password?</a>
                    <button type="submit" class="btn" data-translate="login">Masuk</button>
                </form>
                <div class="auth-footer">
                    Belum punya akun? <a href="#" onclick="showPage('register-page')">Daftar sekarang</a>
                </div>
            </div>

            <div id="register-page" class="page auth-container" data-flow="auth">
                <div class="auth-header">
                    <h2>Daftar Toko Baru</h2>
                    <p>Isi data untuk memulai</p>
                </div>
                <form class="auth-form" onsubmit="handleRegister(event)">
                    <div class="input-group">
                        <i class="material-icons-outlined">storefront</i>
                        <input type="text" id="store-name" placeholder="Nama Toko" required>
                    </div>
                    <div class="input-group">
                        <i class="material-icons-outlined">person</i>
                        <input type="text" id="owner-name" placeholder="Nama Pemilik" required>
                    </div>
                    <div class="input-group">
                        <i class="material-icons-outlined">category</i>
                        <select id="business-category">
                            <option value="" disabled selected>Pilih Kategori Bisnis</option>
                            <option value="food_beverage">Makanan & Minuman</option>
                            <option value="retail">Retail</option>
                            <option value="service">Jasa</option>
                            <option value="other">Lainnya</option>
                        </select>
                    </div>
                    <div class="input-group">
                        <i class="material-icons-outlined">email</i>
                        <input type="email" id="register-email" placeholder="Email" required>
                    </div>
                    <div class="input-group">
                        <i class="material-icons-outlined">lock</i>
                        <input type="password" id="register-password" placeholder="Password" required>
                    </div>
                    <button type="submit" class="btn" data-translate="register">Daftar</button>
                </form>
                <div class="auth-footer">
                    Sudah punya akun? <a href="#" onclick="showPage('login-page')">Masuk di sini</a>
                </div>
            </div>

            <div id="forgot-password-page" class="page auth-container" data-flow="auth">
                <div class="auth-header">
                    <h2>Lupa Password</h2>
                    <p>Masukkan email untuk verifikasi</p>
                </div>
                <form class="auth-form" onsubmit="handleForgotPassword(event)">
                    <div class="input-group">
                        <i class="material-icons-outlined">email</i>
                        <input type="email" id="forgot-email" placeholder="Email" required>
                    </div>
                    <button type="submit" class="btn">Kirim OTP</button>
                </form>
                <div class="auth-footer">
                    <a href="#" onclick="showPage('login-page')">Kembali ke Login</a>
                </div>
            </div>

            <div id="otp-verification-page" class="page auth-container" data-flow="auth">
                <div class="auth-header">
                    <i class="material-icons-outlined" style="font-size: 3em; color: var(--accent-color);">lock_open</i>
                    <h2>Verifikasi OTP</h2>
                    <p>Kode telah dikirim ke <span id="verification-email-target" style="font-weight: 600;"></span></p>
                </div>
                <form class="auth-form" onsubmit="handleOtpVerification(event)">
                    <div class="otp-inputs">
                        <input type="text" maxlength="1" required oninput="moveToNext(this)">
                        <input type="text" maxlength="1" required oninput="moveToNext(this)">
                        <input type="text" maxlength="1" required oninput="moveToNext(this)">
                        <input type="text" maxlength="1" required oninput="moveToNext(this)">
                        <input type="text" maxlength="1" required oninput="moveToNext(this)">
                        <input type="text" maxlength="1" required oninput="moveToNext(this)">
                    </div>
                    <button type="submit" class="btn">Verifikasi</button>
                </form>
                <div class="auth-footer">
                    Tidak menerima kode? <a href="#">Kirim Ulang</a>
                </div>
            </div>

            <div id="onboarding-page" class="page" data-flow="app">
                <i class="material-icons onboarding-icon">local_mall</i>
                <h2>Selamat Datang di kiPOS</h2>
                <p>Aplikasi point of sales mobile yang dirancang untuk kemudahan bisnis Anda.</p>
                <button class="onboarding-btn" onclick="showPageWithLoader('dashboard-page')">Mulai Sekarang</button>
            </div>

            <div id="dashboard-page" class="page" data-flow="app">
                <h2>Dashboard</h2>
                <div class="summary-grid">
                    <div class="summary-card sales">
                        <div class="value" id="total-sales">Rp 0</div>
                        <div class="label">Total Penjualan Hari Ini</div>
                    </div>
                    <div class="summary-card profit">
                        <div class="value" id="total-profit">Rp 0</div>
                        <div class="label">Keuntungan Hari Ini</div>
                    </div>
                </div>
                <div class="card chart-container">
                    <h3>Penjualan Mingguan</h3>
                    <canvas id="weekly-sales-chart"></canvas>
                </div>
                <div class="card">
                    <h3>Produk Terlaris</h3>
                    <ul id="top-products" class="top-products-list"></ul>
                </div>
            </div>

            <div id="home-page" class="page" data-flow="app">
                <h2>Pilih Kategori</h2>
                <div class="category-list">
                    <div class="card category-card" onclick="showProductList('Makanan')">
                        <i class="material-icons-outlined">restaurant</i>
                        <h3>Makanan</h3>
                    </div>
                    <div class="card category-card" onclick="showProductList('Minuman')">
                        <i class="material-icons-outlined">local_cafe</i>
                        <h3>Minuman</h3>
                    </div>
                    <div class="card category-card" onclick="showProductList('Snack')">
                        <i class="material-icons-outlined">fastfood</i>
                        <h3>Snack</h3>
                    </div>
                </div>
            </div>

            <div id="product-list-page" class="page" data-flow="app">
                <h2 id="product-category-title">Produk</h2>
                <div class="category-filter" id="product-filter-tabs">
                    <button class="active" onclick="filterProducts('all')">Semua</button>
                    <button onclick="filterProducts('Makanan')">Makanan</button>
                    <button onclick="filterProducts('Minuman')">Minuman</button>
                    <button onclick="filterProducts('Snack')">Snack</button>
                </div>
                <div class="product-list" id="product-items-container"></div>
            </div>

            <div id="cart-page" class="page" data-flow="app">
                <h2>Keranjang Belanja</h2>
                <div id="cart-list"></div>
                <div id="cart-summary" style="display:none;">
                    <div class="cart-total">
                        <span>Total:</span>
                        <span id="cart-total-price">Rp 0</span>
                    </div>
                    <button class="btn" onclick="showPage('payment-page')">Bayar Sekarang</button>
                </div>
                <p id="empty-cart-message">Keranjang belanja Anda kosong.</p>
            </div>

            <div id="payment-page" class="page" data-flow="app">
                <h2>Pembayaran</h2>
                <div class="card">
                    <div class="discount-container">
                        <input type="number" id="discount-input" placeholder="Diskon (%)" min="0" max="100">
                        <button onclick="applyDiscount()">Terapkan</button>
                    </div>
                    <div class="payment-summary-item">
                        <span>Total Belanja</span>
                        <span id="payment-subtotal">Rp 0</span>
                    </div>
                    <div class="payment-summary-item">
                        <span>Diskon (<span id="discount-percentage-label">0%</span>)</span>
                        <span id="payment-discount">Rp 0</span>
                    </div>
                    <hr style="border-color: var(--border-color); margin: 10px 0;">
                    <div class="payment-summary-item total">
                        <span>Total Pembayaran</span>
                        <span id="payment-total-amount">Rp 0</span>
                    </div>
                </div>

                <div class="card">
                    <h3>Pilih Metode Pembayaran</h3>
                    <div class="payment-method-grid">
                        <div class="method-card active" onclick="selectPaymentMethod(this, 'tunai')">
                            <i class="material-icons-outlined">payments</i>
                            <h4>Tunai</h4>
                        </div>
                        <div class="method-card" onclick="selectPaymentMethod(this, 'qris')">
                            <i class="material-icons-outlined">qr_code_2</i>
                            <h4>QRIS</h4>
                        </div>
                    </div>
                    <div id="qr-code-container" style="display: none;"></div>
                    <button class="btn" style="margin-top: 20px;" onclick="completePayment()">Konfirmasi Pembayaran</button>
                    <p class="back-to-cart" onclick="showPage('cart-page')">Kembali ke Keranjang</p>
                </div>
            </div>
            
            <div id="manage-products-page" class="page" data-flow="app">
                <h2>Manajemen Produk</h2>
                <div class="card" id="manage-product-list"></div>
                <button class="add-product-btn" onclick="openAddProductModal()">
                    <i class="material-icons-outlined" style="margin-right: 5px;">add</i> Tambah Produk Baru
                </button>
            </div>
            
            <div id="add-edit-product-modal" class="modal">
                <div class="modal-content">
                    <span class="close-btn" onclick="closeModal('add-edit-product-modal')">&times;</span>
                    <h3 id="modal-title">Tambah Produk Baru</h3>
                    <form id="product-form">
                        <input type="hidden" id="product-id">
                        <div class="form-group">
                            <label for="product-category">Kategori</label>
                            <select id="product-category" required>
                                <option value="Makanan">Makanan</option>
                                <option value="Minuman">Minuman</option>
                                <option value="Snack">Snack</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="product-name">Nama Produk</label>
                            <input type="text" id="product-name" required>
                        </div>
                        <div class="form-group">
                            <label for="product-price">Harga (Rp)</label>
                            <input type="number" id="product-price" required min="0">
                        </div>
                        <div class="form-group">
                            <label for="product-img-url">URL Gambar</label>
                            <input type="text" id="product-img-url" placeholder="Opsional">
                        </div>
                        <button type="submit" class="btn" id="modal-submit-btn">Simpan</button>
                    </form>
                </div>
            </div>

            <div id="sale-history-page" class="page" data-flow="app">
                <h2>Riwayat Penjualan</h2>
                <div class="card" id="sale-history-list"></div>
            </div>

            <div id="report-page" class="page" data-flow="app">
                <h2>Laporan Penjualan</h2>
                <div class="card chart-container">
                    <h3>Penjualan Bulan Ini</h3>
                    <canvas id="monthly-sales-chart"></canvas>
                </div>
            </div>

            <div id="settings-page" class="page" data-flow="app">
                <h2>Pengaturan</h2>
                <div class="card">
                    <div class="settings-item" onclick="showPage('profile-page')">
                        <span>Profil Pengguna</span>
                        <i class="material-icons-outlined">chevron_right</i>
                    </div>
                    <div class="settings-item">
                        <span>Mode Gelap</span>
                        <label class="switch">
                            <input type="checkbox" id="dark-mode-toggle" onchange="toggleDarkMode()">
                            <span class="slider"></span>
                        </label>
                    </div>
                    <div class="settings-item">
                        <span>Ganti Bahasa</span>
                        <div style="display: flex; align-items: center; gap: 10px;">
                            <button onclick="setLanguage('en')">EN</button>
                            <button onclick="setLanguage('id')">ID</button>
                        </div>
                    </div>
                </div>
                <button class="btn danger" onclick="confirmLogout()">Keluar</button>
            </div>
            
            <div id="profile-page" class="page" data-flow="app">
                <h2>Profil Pengguna</h2>
                <div class="card">
                    <div class="profile-avatar">
                        <i class="material-icons-outlined">person</i>
                    </div>
                    <form class="profile-form" onsubmit="updateProfile(event)">
                        <label for="profile-name">Nama Pengguna</label>
                        <input type="text" id="profile-name" value="Admin kiPOS" required>
                        <label for="profile-email">Email</label>
                        <input type="email" id="profile-email" value="admin@kipos.com" required>
                        <button type="submit" class="btn">Simpan Perubahan</button>
                    </form>
                </div>
            </div>

            <div id="offline-notification" class="notification error" style="display: none;">
                <i class="material-icons">cloud_off</i>
                <span>Anda sedang offline. Data akan disinkronkan saat online.</span>
            </div>
            
        </div>

        <div class="footer-nav" id="app-footer-nav" style="display: none;">
            <button id="dashboard-btn" class="active" onclick="showPageWithLoader('dashboard-page')">
                <i class="material-icons">dashboard</i>
                Dashboard
            </button>
            <button id="home-btn" onclick="showPageWithLoader('home-page')">
                <i class="material-icons">sell</i>
                Penjualan
            </button>
            <button id="manage-products-btn" onclick="showPageWithLoader('manage-products-page')">
                <i class="material-icons">inventory_2</i>
                Produk
            </button>
            <button id="sale-history-btn" onclick="showPageWithLoader('sale-history-page')">
                <i class="material-icons">history</i>
                Riwayat
            </button>
            <button id="report-btn" onclick="showPageWithLoader('report-page')">
                <i class="material-icons">bar_chart</i>
                Laporan
            </button>
        </div>

        <div class="notification-container" id="notification-container"></div>
    </div>

    <script>
        const products = {
            'Makanan': [
                { id: 1, name: 'Nasi Goreng Spesial', price: 20000, img: 'https://images.unsplash.com/photo-1546069901-ba9599a7e63c?w=500', category: 'Makanan' },
                { id: 2, name: 'Ayam Bakar Madu', price: 25000, img: 'https://images.unsplash.com/photo-1571091718767-18b5b1457add?w=500', category: 'Makanan' },
                { id: 3, name: 'Sate Ayam Bumbu Kacang', price: 18000, img: 'https://images.unsplash.com/photo-1568901346375-23c9450c58cd?w=500', category: 'Makanan' },
            ],
            'Minuman': [
                { id: 4, name: 'Es Teh Manis', price: 5000, img: 'https://images.unsplash.com/photo-1521587765099-ef13a693c06e?w=500', category: 'Minuman' },
                { id: 5, name: 'Kopi Susu Gula Aren', price: 12000, img: 'https://images.unsplash.com/photo-1551028150-64b9f398f67e?w=500', category: 'Minuman' },
                { id: 6, name: 'Jus Jeruk Segar', price: 10000, img: 'https://images.unsplash.com/photo-1579737207905-ac1ae933f7ed?w=500', category: 'Minuman' },
            ],
            'Snack': [
                { id: 7, name: 'Kentang Goreng Keju', price: 15000, img: 'https://images.unsplash.com/photo-1628178129037-184514ac8f25?w=500', category: 'Snack' },
                { id: 8, name: 'Roti Bakar Coklat', price: 12000, img: 'https://images.unsplash.com/photo-1558961363-fa14f3299a9a?w=500', category: 'Snack' },
            ]
        };

        const translations = {
            en: {
                welcome: 'Point of Sales solution for your business',
                login: 'Login',
                register: 'Register',
                dashboard: 'Dashboard',
                sales: 'Sales',
                products: 'Products',
                history: 'History',
                reports: 'Reports',
                cart: 'Cart',
                payment: 'Payment',
                addProduct: 'Add Product',
                editProduct: 'Edit Product',
                delete: 'Delete',
                all: 'All',
                food: 'Food',
                drink: 'Drink',
                snack: 'Snack',
                totalSalesToday: 'Today\'s Total Sales',
                totalProfitToday: 'Today\'s Total Profit',
                weeklySales: 'Weekly Sales',
                topProducts: 'Top Selling Products',
                productManagement: 'Product Management',
                addNewProduct: 'Add New Product',
                editProductModal: 'Edit Product',
                productName: 'Product Name',
                price: 'Price',
                imageURL: 'Image URL',
                save: 'Save',
                saleHistory: 'Sale History',
                noSaleHistory: 'No sale history yet.',
                monthlySales: 'Monthly Sales',
                settings: 'Settings',
                userProfile: 'User Profile',
                darkMode: 'Dark Mode',
                changeLanguage: 'Change Language',
                logout: 'Logout',
                saveChanges: 'Save Changes',
                emptyCart: 'Your cart is empty.',
                total: 'Total:',
                payNow: 'Pay Now',
                backToCart: 'Back to Cart',
                paymentTitle: 'Payment',
                subtotal: 'Subtotal',
                discount: 'Discount',
                totalPayment: 'Total Payment',
                selectMethod: 'Select Payment Method',
                cash: 'Cash',
                confirmPayment: 'Confirm Payment',
                offlineMessage: 'You are offline. Data will be synced when you\'re back online.',
            },
            id: {
                welcome: 'Solusi Point of Sales untuk bisnis Anda',
                login: 'Masuk',
                register: 'Daftar',
                dashboard: 'Dashboard',
                sales: 'Penjualan',
                products: 'Produk',
                history: 'Riwayat',
                reports: 'Laporan',
                cart: 'Keranjang',
                payment: 'Pembayaran',
                addProduct: 'Tambah Produk',
                editProduct: 'Edit Produk',
                delete: 'Hapus',
                all: 'Semua',
                food: 'Makanan',
                drink: 'Minuman',
                snack: 'Snack',
                totalSalesToday: 'Total Penjualan Hari Ini',
                totalProfitToday: 'Keuntungan Hari Ini',
                weeklySales: 'Penjualan Mingguan',
                topProducts: 'Produk Terlaris',
                productManagement: 'Manajemen Produk',
                addNewProduct: 'Tambah Produk Baru',
                editProductModal: 'Ubah Produk',
                productName: 'Nama Produk',
                price: 'Harga',
                imageURL: 'URL Gambar',
                save: 'Simpan',
                saleHistory: 'Riwayat Penjualan',
                noSaleHistory: 'Belum ada riwayat penjualan.',
                monthlySales: 'Penjualan Bulan Ini',
                settings: 'Pengaturan',
                userProfile: 'Profil Pengguna',
                darkMode: 'Mode Gelap',
                changeLanguage: 'Ganti Bahasa',
                logout: 'Keluar',
                saveChanges: 'Simpan Perubahan',
                emptyCart: 'Keranjang belanja Anda kosong.',
                total: 'Total:',
                payNow: 'Bayar Sekarang',
                backToCart: 'Kembali ke Keranjang',
                paymentTitle: 'Pembayaran',
                subtotal: 'Total Belanja',
                discount: 'Diskon',
                totalPayment: 'Total Pembayaran',
                selectMethod: 'Pilih Metode Pembayaran',
                cash: 'Tunai',
                confirmPayment: 'Konfirmasi Pembayaran',
                offlineMessage: 'Anda sedang offline. Data akan disinkronkan saat online.',
            }
        };

        let currentLang = localStorage.getItem('language') || 'id';
        let cart = JSON.parse(localStorage.getItem('kipos_cart')) || {};
        let saleHistory = JSON.parse(localStorage.getItem('kipos_sale_history')) || [];
        let currentPage = 'kipos-loader';
        const pageHistory = [];
        let weeklyChart, monthlyChart;
        let selectedPaymentMethod = 'tunai';
        let discountPercentage = 0;
        const isVerifiedDevice = localStorage.getItem('is_verified_device') === 'true';
        let productsData = JSON.parse(localStorage.getItem('kipos_products')) || products;

        document.addEventListener('DOMContentLoaded', () => {
            document.documentElement.setAttribute('data-theme', localStorage.getItem('theme') || 'light');
            document.getElementById('dark-mode-toggle').checked = localStorage.getItem('theme') === 'dark';
            
            setLanguage(currentLang);
            showPage('kipos-loader');
            setTimeout(() => {
                showPage(isVerifiedDevice ? 'dashboard-page' : 'landing-page');
            }, 2000); 

            window.addEventListener('online', syncData);
            window.addEventListener('offline', () => {
                document.getElementById('offline-notification').style.display = 'flex';
                showNotification(translations[currentLang].offlineMessage, 'error');
            });
            if (!navigator.onLine) {
                document.getElementById('offline-notification').style.display = 'flex';
            }
        });

        function showAppUI(show) {
            const header = document.getElementById('app-header');
            const footer = document.getElementById('app-footer-nav');
            header.style.display = show ? 'flex' : 'none';
            footer.style.display = show ? 'flex' : 'none';
        }

        function saveProducts() {
            localStorage.setItem('kipos_products', JSON.stringify(productsData));
        }

        function saveCart() {
            localStorage.setItem('kipos_cart', JSON.stringify(cart));
            updateCartCount();
            renderCart();
            updatePaymentPage();
        }

        function saveSaleHistory() {
            localStorage.setItem('kipos_sale_history', JSON.stringify(saleHistory));
            renderDashboard();
            renderSaleHistory();
            renderReports();
        }

        function showPage(pageId) {
            const flow = document.getElementById(pageId).getAttribute('data-flow');
            
            if (flow === 'app') {
                showAppUI(true);
            } else {
                showAppUI(false);
            }

            if (pageId !== currentPage && flow === document.getElementById(currentPage).getAttribute('data-flow') && pageId !== 'general-loader' && pageId !== 'kipos-loader') {
                 pageHistory.push(currentPage);
            } else if (flow !== document.getElementById(currentPage).getAttribute('data-flow')) {
                 pageHistory.length = 0;
            }

            document.querySelectorAll('.page').forEach(page => page.style.display = 'none');
            document.getElementById(pageId).style.display = 'block';

            document.querySelectorAll('.footer-nav button').forEach(btn => btn.classList.remove('active'));
            const footerBtn = document.getElementById(pageId.replace('-page', '-btn'));
            if(footerBtn) {
                footerBtn.classList.add('active');
            }

            const header = document.querySelector('.header');
            if (pageId === 'product-list-page' || pageId === 'payment-page' || pageId === 'manage-products-page' || pageId === 'sale-history-page' || pageId === 'report-page' || pageId === 'settings-page' || pageId === 'profile-page') {
                header.classList.add('app-mode');
            } else {
                header.classList.remove('app-mode');
            }
            
            currentPage = pageId;
        }

        function goBack() {
            if (pageHistory.length > 0) {
                const prevPage = pageHistory.pop();
                showPage(prevPage);
            } else {
                showPage('dashboard-page');
            }
        }

        function showPageWithLoader(pageId) {
            showPage('general-loader');
            setTimeout(() => {
                showPage(pageId);
                if (pageId === 'dashboard-page') renderDashboard();
                if (pageId === 'home-page') filterProducts('all');
                if (pageId === 'manage-products-page') renderProductManagement();
                if (pageId === 'sale-history-page') renderSaleHistory();
                if (pageId === 'report-page') renderReports();
            }, 1000);
        }

        // 1. Add/Edit/Delete Products in Product Management
        function renderProductManagement() {
            const productList = document.getElementById('manage-product-list');
            productList.innerHTML = '';

            const allProducts = Object.values(productsData).flat();
            if (allProducts.length === 0) {
                productList.innerHTML = `<p style="text-align: center; color: var(--text-light);">Belum ada produk.</p>`;
                return;
            }

            allProducts.forEach(product => {
                const item = document.createElement('div');
                item.className = 'product-item';
                item.innerHTML = `
                    <img src="${product.img}" alt="${product.name}">
                    <div class="details">
                        <div class="name">${product.name}</div>
                        <div class="price">Rp ${product.price.toLocaleString('id-ID')}</div>
                    </div>
                    <div class="action-buttons">
                        <button class="edit" onclick="openEditProductModal(${product.id}, '${product.category}')"><i class="material-icons-outlined">edit</i></button>
                        <button class="delete" onclick="deleteProduct(${product.id}, '${product.category}')"><i class="material-icons-outlined">delete</i></button>
                    </div>
                `;
                productList.appendChild(item);
            });
        }

        function openAddProductModal() {
            document.getElementById('product-form').reset();
            document.getElementById('modal-title').textContent = translations[currentLang].addNewProduct;
            document.getElementById('modal-submit-btn').textContent = translations[currentLang].save;
            document.getElementById('product-id').value = '';
            document.getElementById('add-edit-product-modal').classList.add('active');
        }

        function openEditProductModal(productId, category) {
            const product = productsData[category].find(p => p.id === productId);
            if (!product) return;
            
            document.getElementById('modal-title').textContent = translations[currentLang].editProductModal;
            document.getElementById('modal-submit-btn').textContent = translations[currentLang].saveChanges;
            document.getElementById('product-id').value = product.id;
            document.getElementById('product-category').value = category;
            document.getElementById('product-name').value = product.name;
            document.getElementById('product-price').value = product.price;
            document.getElementById('product-img-url').value = product.img;

            document.getElementById('add-edit-product-modal').classList.add('active');
        }

        document.getElementById('product-form').addEventListener('submit', function(event) {
            event.preventDefault();
            const id = document.getElementById('product-id').value;
            const category = document.getElementById('product-category').value;
            const name = document.getElementById('product-name').value;
            const price = parseInt(document.getElementById('product-price').value);
            const img = document.getElementById('product-img-url').value || 'https://via.placeholder.com/150';

            if (id) {
                // Edit existing product
                const oldCategory = Object.keys(productsData).find(cat => productsData[cat].some(p => p.id == id));
                if (oldCategory && oldCategory !== category) {
                    productsData[oldCategory] = productsData[oldCategory].filter(p => p.id != id);
                    if (!productsData[category]) productsData[category] = [];
                    productsData[category].push({ id: parseInt(id), name, price, img, category });
                } else {
                    const productIndex = productsData[category].findIndex(p => p.id == id);
                    if (productIndex > -1) {
                        productsData[category][productIndex] = { id: parseInt(id), name, price, img, category };
                    }
                }
                showNotification('Produk berhasil diubah!');
            } else {
                // Add new product
                const newId = Date.now();
                if (!productsData[category]) productsData[category] = [];
                productsData[category].push({ id: newId, name, price, img, category });
                showNotification('Produk berhasil ditambahkan!');
            }
            saveProducts();
            renderProductManagement();
            closeModal('add-edit-product-modal');
        });

        function deleteProduct(productId, category) {
            if (confirm('Apakah Anda yakin ingin menghapus produk ini?')) {
                productsData[category] = productsData[category].filter(product => product.id !== productId);
                saveProducts();
                renderProductManagement();
                showNotification('Produk berhasil dihapus!');
            }
        }

        function closeModal(modalId) {
            document.getElementById(modalId).classList.remove('active');
        }

        // 2. Filter Products by Category
        function filterProducts(category) {
            const productListContainer = document.getElementById('product-items-container');
            const categoryTabs = document.getElementById('product-filter-tabs');
            
            categoryTabs.querySelectorAll('button').forEach(btn => {
                btn.classList.remove('active');
            });
            categoryTabs.querySelector(`button[onclick="filterProducts('${category}')"]`).classList.add('active');

            productListContainer.innerHTML = '';
            
            let selectedProducts;
            if (category === 'all') {
                selectedProducts = Object.values(productsData).flat();
            } else {
                selectedProducts = productsData[category];
            }

            if (!selectedProducts || selectedProducts.length === 0) {
                productListContainer.innerHTML = `<p style="text-align: center; color: var(--text-light);">Tidak ada produk di kategori ini.</p>`;
                return;
            }

            selectedProducts.forEach(product => {
                const productCard = document.createElement('div');
                productCard.className = 'product-card';
                productCard.innerHTML = `
                    <img src="${product.img}" alt="${product.name}">
                    <div class="info">
                        <h3>${product.name}</h3>
                        <p class="price">Rp ${product.price.toLocaleString('id-ID')}</p>
                        <button class="add-btn" onclick="addToCart(${product.id}, '${product.name}', ${product.price}, '${product.img}')">
                            <i class="material-icons-outlined" style="font-size: 1.2em; margin-right: 5px;">add_circle_outline</i>
                            Tambah
                        </button>
                    </div>
                `;
                productListContainer.appendChild(productCard);
            });
        }

        // 3. Implement Discounts
        function applyDiscount() {
            const discountInput = document.getElementById('discount-input').value;
            discountPercentage = parseFloat(discountInput) || 0;
            if (discountPercentage > 100) discountPercentage = 100;
            if (discountPercentage < 0) discountPercentage = 0;
            
            document.getElementById('discount-input').value = discountPercentage;
            document.getElementById('discount-percentage-label').textContent = `${discountPercentage}%`;
            updatePaymentPage();
            showNotification(`Diskon ${discountPercentage}% berhasil diterapkan!`);
        }

        // 4. Add Sales Analytics
        function renderDashboard() {
            const todaySales = saleHistory
                .filter(sale => new Date(sale.id).toDateString() === new Date().toDateString())
                .reduce((sum, sale) => sum + sale.total, 0);
            
            document.getElementById('total-sales').textContent = `Rp ${todaySales.toLocaleString('id-ID')}`;
            document.getElementById('total-profit').textContent = `Rp ${(todaySales * 0.3).toLocaleString('id-ID')}`; 

            const weeklySalesLabels = ['Sen', 'Sel', 'Rab', 'Kam', 'Jum', 'Sab', 'Min'];
            const weeklySalesData = [100000, 150000, 200000, 180000, 250000, 300000, todaySales];
            const weeklyCtx = document.getElementById('weekly-sales-chart').getContext('2d');
            if (weeklyChart) weeklyChart.destroy();
            weeklyChart = new Chart(weeklyCtx, {
                type: 'bar',
                data: {
                    labels: weeklySalesLabels,
                    datasets: [{
                        label: 'Penjualan',
                        data: weeklySalesData,
                        backgroundColor: 'rgba(56, 161, 105, 0.8)',
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: (value) => `Rp ${value.toLocaleString('id-ID')}`
                            }
                        }
                    },
                    plugins: {
                        legend: { display: false }
                    }
                }
            });

            renderTopProducts();
        }

        function renderTopProducts() {
            const topProducts = saleHistory.flatMap(sale => Object.values(sale.items))
                .reduce((acc, item) => {
                    acc[item.name] = (acc[item.name] || 0) + item.quantity;
                    return acc;
                }, {});

            const sortedProducts = Object.entries(topProducts)
                .sort((a, b) => b[1] - a[1])
                .slice(0, 5);

            const topProductsContainer = document.getElementById('top-products');
            topProductsContainer.innerHTML = '';
            if (sortedProducts.length === 0) {
                topProductsContainer.innerHTML = `<p style="text-align: center; color: var(--text-light);">Belum ada produk terlaris.</p>`;
                return;
            }
            sortedProducts.forEach(([name, quantity]) => {
                const productElement = document.createElement('li');
                productElement.innerHTML = `
                    <span>${name}</span>
                    <span>${quantity} terjual</span>
                `;
                topProductsContainer.appendChild(productElement);
            });
        }

        // 5. Add User Profile & Settings
        function updateProfile(event) {
            event.preventDefault();
            const name = document.getElementById('profile-name').value;
            const email = document.getElementById('profile-email').value;

            localStorage.setItem('user_name', name);
            localStorage.setItem('user_email', email);
            showNotification('Profil berhasil diperbarui!');
        }

        function confirmLogout() {
            if (confirm('Apakah Anda yakin ingin keluar?')) {
                localStorage.removeItem('is_verified_device');
                localStorage.removeItem('user_name');
                localStorage.removeItem('user_email');
                localStorage.removeItem('theme');
                localStorage.removeItem('language');
                showPage('landing-page');
            }
        }

        // 6. Add Multi-Language Support
        function setLanguage(lang) {
            currentLang = lang;
            localStorage.setItem('language', lang);
            document.querySelectorAll('[data-translate]').forEach(element => {
                const key = element.getAttribute('data-translate');
                element.textContent = translations[lang][key];
            });
            renderProductManagement();
            renderCart();
            renderDashboard();
            renderSaleHistory();
            renderReports();
            showNotification(`Bahasa diubah menjadi ${lang.toUpperCase()}`);
        }

        // 7. Add Notifications
        function showNotification(message, type = 'success') {
            const container = document.getElementById('notification-container');
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.innerHTML = `<i class="material-icons">${type === 'success' ? 'check_circle_outline' : 'error_outline'}</i><span>${message}</span>`;
            
            container.appendChild(notification);
            setTimeout(() => {
                notification.classList.add('show');
            }, 10);
            
            setTimeout(() => {
                notification.classList.remove('show');
                notification.addEventListener('transitionend', () => notification.remove());
            }, 3000);
        }

        // 8. Add Offline Mode
        function syncData() {
            if (navigator.onLine) {
                document.getElementById('offline-notification').style.display = 'none';
                // Implement logic to send data to server
                showNotification('Aplikasi kembali online. Data berhasil disinkronkan.');
            } else {
                showNotification(translations[currentLang].offlineMessage, 'error');
            }
        }

        // 9. Add QR Code for Payment
        function selectPaymentMethod(element, method) {
            document.querySelectorAll('.method-card').forEach(card => card.classList.remove('active'));
            element.classList.add('active');
            selectedPaymentMethod = method;
            
            const qrContainer = document.getElementById('qr-code-container');
            if (method === 'qris') {
                qrContainer.style.display = 'flex';
                generateQrCode();
            } else {
                qrContainer.style.display = 'none';
            }
        }

        function generateQrCode() {
            const qrContainer = document.getElementById('qr-code-container');
            qrContainer.innerHTML = '';
            
            const subtotal = Object.values(cart).reduce((sum, item) => sum + item.price * item.quantity, 0);
            const qrData = `KIOS|${Date.now()}|${subtotal}|${discountPercentage}`;

            new QRCode(qrContainer, {
                text: qrData,
                width: 150,
                height: 150,
            });
        }

        function completePayment() {
            if (Object.keys(cart).length === 0) {
                alert('Keranjang belanja kosong!');
                return;
            }

            const subtotal = Object.values(cart).reduce((sum, item) => sum + item.price * item.quantity, 0);
            const discountAmount = (subtotal * discountPercentage) / 100;
            const transactionTotal = subtotal - discountAmount;

            const newTransaction = {
                id: Date.now(),
                date: new Date().toLocaleDateString('id-ID', { day: 'numeric', month: 'short', year: 'numeric' }),
                items: JSON.parse(JSON.stringify(cart)),
                subtotal: subtotal,
                discount: discountAmount,
                total: transactionTotal,
                paymentMethod: selectedPaymentMethod,
            };
            saleHistory.push(newTransaction);
            
            cart = {};
            discountPercentage = 0;
            saveCart();
            saveSaleHistory();
            
            showNotification('Pembayaran berhasil! Total: Rp ' + transactionTotal.toLocaleString('id-ID'));
            showPageWithLoader('home-page');
        }

        // 10. Add Dark Mode
        function toggleDarkMode() {
            const root = document.documentElement;
            const isDarkMode = root.getAttribute('data-theme') === 'dark';
            if (isDarkMode) {
                root.setAttribute('data-theme', 'light');
                localStorage.setItem('theme', 'light');
            } else {
                root.setAttribute('data-theme', 'dark');
                localStorage.setItem('theme', 'dark');
            }
        }

        // --- Core Functions ---
        function updateCartCount() {
            const totalItems = Object.values(cart).reduce((sum, item) => sum + item.quantity, 0);
            const cartCountElement = document.getElementById('cart-count');
            cartCountElement.textContent = totalItems;
            cartCountElement.style.display = totalItems > 0 ? 'flex' : 'none';
        }

        function renderCart() {
            const cartList = document.getElementById('cart-list');
            const cartSummary = document.getElementById('cart-summary');
            const emptyCartMessage = document.getElementById('empty-cart-message');
            cartList.innerHTML = '';

            const cartItems = Object.values(cart);
            if (cartItems.length === 0) {
                emptyCartMessage.style.display = 'block';
                cartSummary.style.display = 'none';
                return;
            }

            emptyCartMessage.style.display = 'none';
            cartSummary.style.display = 'block';

            let subtotal = 0;
            cartItems.forEach(item => {
                const itemTotal = item.price * item.quantity;
                subtotal += itemTotal;
                const cartItemElement = document.createElement('div');
                cartItemElement.className = 'cart-item';
                cartItemElement.innerHTML = `
                    <div class="item-details">
                        <b>${item.name}</b>
                        <span>Rp ${item.price.toLocaleString('id-ID')}</span>
                    </div>
                    <div class="quantity-control">
                        <button onclick="updateQuantity(${item.id}, -1)">-</button>
                        <span>${item.quantity}</span>
                        <button onclick="updateQuantity(${item.id}, 1)">+</button>
                    </div>
                    <div class="item-price">
                        Rp ${itemTotal.toLocaleString('id-ID')}
                    </div>
                `;
                cartList.appendChild(cartItemElement);
            });

            document.getElementById('cart-total-price').textContent = `Rp ${subtotal.toLocaleString('id-ID')}`;
        }

        function updateQuantity(id, change) {
            if (cart[id]) {
                cart[id].quantity += change;
                if (cart[id].quantity <= 0) {
                    delete cart[id];
                }
            }
            saveCart();
        }

        function updatePaymentPage() {
            const subtotal = Object.values(cart).reduce((sum, item) => sum + item.price * item.quantity, 0);
            const discountAmount = (subtotal * discountPercentage) / 100;
            const totalAmount = subtotal - discountAmount;
            
            document.getElementById('payment-subtotal').textContent = `Rp ${subtotal.toLocaleString('id-ID')}`;
            document.getElementById('payment-discount').textContent = `Rp ${discountAmount.toLocaleString('id-ID')}`;
            document.getElementById('payment-total-amount').textContent = `Rp ${totalAmount.toLocaleString('id-ID')}`;
            document.getElementById('discount-percentage-label').textContent = `${discountPercentage}%`;

            if (selectedPaymentMethod === 'qris') {
                generateQrCode();
            }
        }

        function renderSaleHistory() {
            const historyList = document.getElementById('sale-history-list');
            historyList.innerHTML = '';
            
            if (saleHistory.length === 0) {
                historyList.innerHTML = `<p style="text-align: center; color: var(--text-light);">${translations[currentLang].noSaleHistory}</p>`;
                return;
            }
            
            saleHistory.reverse().forEach(sale => {
                const item = document.createElement('div');
                item.className = 'history-item';
                item.innerHTML = `
                    <div class="info">
                        <h4>Transaksi #${sale.id.toString().slice(-6)}</h4>
                        <span>${sale.date}</span>
                    </div>
                    <div class="total">
                        Rp ${sale.total.toLocaleString('id-ID')}
                    </div>
                `;
                historyList.appendChild(item);
            });
        }

        function renderReports() {
            const monthlySalesLabels = ['Jan', 'Feb', 'Mar', 'Apr', 'Mei', 'Jun', 'Jul', 'Agu', 'Sep', 'Okt', 'Nov', 'Des'];
            const monthlySalesData = [6500000, 5900000, 8000000, 8100000, 5600000, 5500000, 4000000, 7000000, 7500000, 6800000, 9000000, 8500000];
            const monthlyCtx = document.getElementById('monthly-sales-chart').getContext('2d');
            if (monthlyChart) monthlyChart.destroy();
            monthlyChart = new Chart(monthlyCtx, {
                type: 'line',
                data: {
                    labels: monthlySalesLabels,
                    datasets: [{
                        label: 'Penjualan',
                        data: monthlySalesData,
                        fill: true,
                        borderColor: 'rgba(56, 161, 105, 1)',
                        backgroundColor: 'rgba(56, 161, 105, 0.2)',
                        tension: 0.3
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: (value) => `Rp ${value.toLocaleString('id-ID')}`
                            }
                        }
                    },
                    plugins: {
                        legend: { display: false }
                    }
                }
            });
        }

        function handleLogin(event) {
            event.preventDefault();
            const email = document.getElementById('login-email').value;
            const password = document.getElementById('login-password').value;
            
            if (email === 'admin@kipos.com' && password === 'password') {
                if (!isVerifiedDevice) {
                    document.getElementById('verification-email-target').textContent = email;
                    showPage('otp-verification-page');
                } else {
                    showPageWithLoader('onboarding-page');
                }
            } else {
                showNotification('Email atau password salah!', 'error');
            }
        }

        function handleRegister(event) {
            event.preventDefault();
            const storeName = document.getElementById('store-name').value;
            const ownerName = document.getElementById('owner-name').value;
            const businessCategory = document.getElementById('business-category').value;
            const email = document.getElementById('register-email').value;
            const password = document.getElementById('register-password').value;
            
            localStorage.setItem('store_name', storeName);
            document.getElementById('verification-email-target').textContent = email;
            showNotification('Registrasi berhasil! Silakan cek email Anda untuk kode verifikasi.', 'success');
            showPage('otp-verification-page');
        }

        function handleForgotPassword(event) {
            event.preventDefault();
            const email = document.getElementById('forgot-email').value;
            document.getElementById('verification-email-target').textContent = email;
            showNotification('Kode OTP untuk reset password sudah dikirim ke email Anda.', 'success');
            showPage('otp-verification-page');
        }

        function handleOtpVerification(event) {
            event.preventDefault();
            const otp = [...document.querySelectorAll('#otp-verification-page .otp-inputs input')].map(input => input.value).join('');
            if (otp === '123456') {
                localStorage.setItem('is_verified_device', 'true');
                showNotification('Verifikasi berhasil!', 'success');
                showPageWithLoader('onboarding-page');
            } else {
                showNotification('Kode OTP salah!', 'error');
            }
        }

        function moveToNext(currentInput) {
            if (currentInput.value.length === 1) {
                const nextInput = currentInput.nextElementSibling;
                if (nextInput) {
                    nextInput.focus();
                }
            }
        }
    </script>
</body>
</html>